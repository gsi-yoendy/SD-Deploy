{"version":3,"sources":["modules/delivery/modules/order_management/components/order_management/style.tsx","modules/commons/components/editable_list/style.tsx","modules/commons/components/editable_list/VEditableList.tsx","modules/delivery/modules/order_management/components/delivery_exceptions/list_exceptions/ListDeliveryExceptions.tsx","modules/delivery/modules/order_management/components/delivery_exceptions/filter_exceptions/FilterExceptions.tsx","modules/delivery/modules/order_management/components/delivery_exceptions/exceptions_actions/ExceptionsActions.tsx","modules/delivery/modules/order_management/components/delivery_exceptions/DeliveryExceptionsComponent.tsx"],"names":["layerCheck","labelWidth","inputWidth","layerNumber","FieldsCol","styled","Col","_templateObject","SearchCol","_templateObject2","DateField","VDateTimePicker","_templateObject3","NumberField","VInputField","_templateObject4","BtnAddProfile","_templateObject5","Button","_templateObject6","VCardPanelModList","VEditableList","_templateObject7","VCardPanel","_templateObject8","VCardCheckList","VCheckboxField","_templateObject9","StyledQtyInput","_templateObject10","_templateObject11","StyledTankInput","_templateObject12","FilterCol","_templateObject13","ButtonRow","Row","_templateObject14","ButtonRowBottom","_templateObject15","ButtonRowTop","_templateObject16","WhiteButton","_templateObject17","_templateObject18","StyledMenuItem","MenuItem","props","active","background","color","concat","StyledMenu","Menu","padding","height","style_padding","style_height","HeaderVEditableList","VSelectField","div","textcolor","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","form","state","listSelected","elementsSelected","filter","e","listItems","listSelect","listSelectElements","isActive","elements","find","value","onItemClick","element","new_list","setState","objectSpread","onSlectItem","i","listItem","values","new_listSelect","push","map","l","onSelect","onDeleteItem","add_selectList","_this$state","val","initForm","FormState","fieldselect","FieldState","getElevation","elevation","Classes","ELEVATION_0","ELEVATION_1","ELEVATION_2","ELEVATION_3","ELEVATION_4","headerCustomComponent","id","list","react_default","a","createElement","style","marginRight","marginTop","tooltip","usePortal","hoverCloseDelay","position","content","toolTipAdd","lib","fieldState","$","onChange","fill","inline","minimal","options","icon","iconOnly","toolTipDel","buttons","onClick","inherits","createClass","key","nextProps","_this2","_this$props","selection","className","headerText","headerColor","headerBgColor","bodyPadding","headerBackgroundColor","hideBtn","Fragment","backgroundColor","textColor","text","label","Component","ThemeConsumer","AppThemeContext","Consumer","renderCustomer","iconSize","renderCustomerType","colorType","injectIntl","DeliveryContext","themeConsumer","deliveryConsumer","intl","formatMessage","total","headerTextJustify","headers","sidebar_text","isLoading","cellSelectionType","striped","columns","enableColumnResizing","typeHeightRow","widgetsCell","column","widget","type","cusmtomerCell","columns_name","delStatus","accountId","orderId","orderStatus","upperCase","orderDate","name","productName","qty","lastDate","lastDelQty","lastDelDriver","columnWidths","data","listExceptions","ColumnArea","Styled","FilterExceptions","changeDays","start","dateMayorIgual","moment","end","dateMenorIgual","onChangeDate","diff_days","diff","days","day","startDate","toDate","endDate","search","FilterExceptions_ThemeConsumer","react_flexbox_grid_lib","lg","sm","dateType","disabled","layer","width","placeholder","onSearchChange","leftIcon","listStatus","onStatusChange","marginBottom","SButton","ExceptionsActions_templateObject","display","marginLeft","flexDirection","DeliveryExceptionsComponent_templateObject","React","createContext","DeliveryExceptionsComponent","inject","observer","delivery_exceptions_store","searchChange","onDates","setDates","status","d","statusChange","_ref","count","moqEndDate","moqStartDate","Provider","xs","margin","filter_exceptions_FilterExceptions","list_exceptions_ListDeliveryExceptions","exceptions_actions_ExceptionsActions"],"mappings":"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","file":"static/js/3.58986c18.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Col, Row } from 'react-flexbox-grid';\r\nimport { VCardPanel, VCheckboxField, VDateTimePicker, VInputField } from 'gsi-vx-ui';\r\nimport { Button } from '@blueprintjs/core';\r\nimport { VEditableList } from '../../../../../commons/components/editable_list/VEditableList';\r\nimport { ILayer } from 'gsi-vx-ui/lib/types/Form/Inputs/ILayer';\r\n\r\nexport const layerCheck: ILayer = {\r\n  labelWidth: 12,\r\n  inputWidth: 1\r\n};\r\nexport const layerNumber: ILayer = {\r\n  inputWidth: 7\r\n};\r\n\r\nexport const FieldsCol = styled(Col)`\r\n  display: flex;\r\n  padding-bottom: 5px;\r\n`;\r\nexport const SearchCol = styled(FieldsCol)`\r\n  justify-content: flex-end;\r\n`;\r\nexport const DateField = styled(VDateTimePicker)`\r\n  padding-left: 2px;\r\n`;\r\n\r\nexport const NumberField = styled(VInputField)`\r\n  padding-left: 2px;\r\n`;\r\nexport const DateFields = styled(FieldsCol)`\r\n  flex-direction: column;\r\n`;\r\nexport const BtnAddProfile = styled(Button)`\r\n  height: 30px;\r\n  margin-left: 5px;\r\n`;\r\nexport const NoBorderList = styled(VEditableList)`\r\n  ul {\r\n    border: none;\r\n    padding: 0;\r\n    box-shadow: none;\r\n    margin: -10px;\r\n  }\r\n`;\r\n\r\nexport const VCardPanelModList = styled(VCardPanel)`\r\n  padding-left: 3px;\r\n`;\r\nexport const VCardCheckList = styled(VCheckboxField)`\r\n  padding-left: 0px;\r\n  & label {\r\n    margin-left: 14px !important;\r\n  }\r\n`;\r\n\r\nexport const StyledDateInput = styled(VInputField)`\r\n  & div {\r\n    width: 100%;\r\n    padding-left: 5px;\r\n    padding-top: 3px;\r\n  }\r\n  & label {\r\n    padding-top: 3px;\r\n    min-width: 65px;\r\n  }\r\n`;\r\nexport const StyledQtyInput = styled(VInputField)`\r\n  & div {\r\n    width: 100%;\r\n    padding-left: 1px;\r\n    padding-top: 3px;\r\n  }\r\n  & label {\r\n    padding-top: 1px;\r\n    padding-left: 4px;\r\n    min-width: 80px;\r\n  }\r\n`;\r\nexport const StyledTankInput = styled(VInputField)`\r\n  & div {\r\n    width: 100%;\r\n    padding-left: 1px;\r\n    padding-top: 3px;\r\n  }\r\n  & label {\r\n    padding-top: 1px;\r\n    padding-left: 4px;\r\n    min-width: 20px;\r\n  }\r\n  & input {\r\n    width: 175px !important;\r\n  }\r\n`;\r\n\r\nexport const FilterCol = styled(Col)`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const ButtonRow = styled(Row)`\r\n  padding: 8px;\r\n`;\r\nexport const ButtonRowBottom = styled(ButtonRow)`\r\n  justify-content: flex-end;\r\n`;\r\nexport const ButtonRowTop = styled(ButtonRow)`\r\n  height: 46px;\r\n  margin: 10px 0;\r\n`;\r\nexport const WhiteButton = styled(Button)`\r\n  color: white !important;\r\n  & > span {\r\n    color: white !important;\r\n  }\r\n`;\r\nexport const BlackButton = styled(Button)`\r\n  color: black !important;\r\n  & > span {\r\n    color: black !important;\r\n  }\r\n`;\r\n","import { Menu, MenuItem, Button } from '@blueprintjs/core';\r\nimport styled from 'styled-components';\r\nimport { VSelectField } from 'gsi-vx-ui';\r\n\r\nexport interface StyledMenuProps {\r\n  active?: boolean;\r\n  background?: any;\r\n  color?: any;\r\n  padding?: any;\r\n  height?: string;\r\n  className?: string;\r\n}\r\n\r\nexport const StyledMenuItem = styled(MenuItem)`\r\n  ${(props: StyledMenuProps) => {\r\n    const { active, background, color } = props;\r\n    return active\r\n      ? `background: ${background}!important;\r\n         color: ${color}!important;`\r\n      : '';\r\n  }}\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nexport const StyledMenu = styled(Menu)`\r\n  ${(props: StyledMenuProps) => {\r\n    const { padding, height } = props;\r\n    const style_padding = padding ? `padding: ${padding}!important;` : '';\r\n    const style_height = `height:${height ? height : '150px'};`;\r\n    return `\r\n        ul {\r\n          border: none;\r\n          padding: 0;\r\n          box-shadow: none;\r\n          margin: -10px;\r\n        }\r\n  \r\n  ${style_padding} \r\n          ${style_height}\r\n          overflow:overlay;`;\r\n  }}\r\n`;\r\nexport const WhiteButton = styled(Button)`\r\n  color: white !important;\r\n  & > span {\r\n    color: white !important;\r\n  }\r\n`;\r\nexport const BlackButton = styled(Button)`\r\n  color: black !important;\r\n  & > span {\r\n    color: black !important;\r\n  }\r\n`;\r\nexport const WhiteSelect = styled(VSelectField)`\r\n  & {\r\n    color: white !important;\r\n  }\r\n`;\r\n\r\ninterface IHeaderVEditableList {\r\n  textcolor: string;\r\n}\r\nexport const HeaderVEditableList = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  svg {\r\n    fill: ${(props: IHeaderVEditableList) => props.textcolor && props.textcolor} !important;\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { Classes, Button, Tooltip } from '@blueprintjs/core';\r\nimport { VCardPanel, VSelectField } from 'gsi-vx-ui';\r\nimport { HeaderVEditableList, StyledMenu, StyledMenuItem, WhiteButton, WhiteSelect } from './style';\r\nimport { FieldState, FormState } from 'formstate';\r\nimport { ElevationType, IEditableItemsList, IEditableListProps } from './IEditableList';\r\n\r\nconst styleDiv = {};\r\ninterface IEditableListState {\r\n  listSelected: IEditableItemsList[];\r\n  listItems: IEditableItemsList[];\r\n  listSelect: IEditableItemsList[];\r\n}\r\n\r\nexport class VEditableList extends Component<IEditableListProps, IEditableListState> {\r\n  form!: FormState<any>;\r\n  constructor(props: IEditableListProps) {\r\n    super(props);\r\n    this.initForm();\r\n  }\r\n  public state: IEditableListState = {\r\n    listSelected: this.props.elementsSelected.filter(e => e.active),\r\n    listItems: this.props.elementsSelected,\r\n    listSelect: this.props.listSelectElements\r\n  };\r\n  componentWillReceiveProps(nextProps: IEditableListProps) {\r\n    this.setState({\r\n      ...this.state,\r\n      listSelected: nextProps.elementsSelected.filter(e => e.active),\r\n      listItems: nextProps.elementsSelected,\r\n      listSelect: nextProps.listSelectElements\r\n    });\r\n  }\r\n  isActive = (elements: IEditableItemsList) => {\r\n    return !!this.state.listSelected.find(e => e.value === elements.value);\r\n  };\r\n  onItemClick = (active: boolean, element: IEditableItemsList) => {\r\n    const { listSelected } = this.state;\r\n    let new_list: IEditableItemsList[];\r\n    active\r\n      ? (new_list = listSelected.filter(e => e.value !== element.value))\r\n      : (new_list = listSelected.concat(element));\r\n    this.setState({ ...this.state, listSelected: new_list });\r\n    this.props.onItemClick && this.props.onItemClick(new_list);\r\n  };\r\n  onSlectItem = (i: any) => {\r\n    const listItem = this.props.listSelectElements.find(e => e.value === i);\r\n    const new_list = this.state.listItems;\r\n    const values: any[] = [];\r\n    if (!!listItem) {\r\n      const new_listSelect = this.state.listSelect.filter(e => e.value !== i);\r\n      new_list.push(listItem);\r\n      this.setState({ ...this.state, listItems: new_list, listSelect: new_listSelect });\r\n    }\r\n    new_list.map(l => {\r\n      values.push(l.value);\r\n    });\r\n    this.props.onSelect(values);\r\n  };\r\n  onDeleteItem = () => {\r\n    const new_list: any[] = [];\r\n    const add_selectList: any[] = [];\r\n    const values: any[] = [];\r\n    const { listItems, listSelected } = this.state;\r\n    listItems.map(e => {\r\n      const val = e.value;\r\n      const selectedItem = !!listSelected.find(i => i.value === val);\r\n      selectedItem ? add_selectList.push(e) : new_list.push(e);\r\n    });\r\n    this.setState({\r\n      ...this.state,\r\n      listItems: new_list,\r\n      listSelected: [],\r\n      listSelect: this.state.listSelect.concat(add_selectList)\r\n    });\r\n\r\n    new_list.map(l => {\r\n      values.push(l.value);\r\n    });\r\n    this.props.onSelect(values);\r\n  };\r\n  initForm = () => {\r\n    const form = new FormState({\r\n      fieldselect: new FieldState('')\r\n    });\r\n    this.form = form;\r\n  };\r\n  getElevation = (elevation: ElevationType): any => {\r\n    switch (elevation) {\r\n      case 0:\r\n        return Classes.ELEVATION_0;\r\n      case 1:\r\n        return Classes.ELEVATION_1;\r\n      case 2:\r\n        return Classes.ELEVATION_2;\r\n      case 3:\r\n        return Classes.ELEVATION_3;\r\n      case 4:\r\n        return Classes.ELEVATION_4;\r\n      default:\r\n        return Classes.ELEVATION_0;\r\n    }\r\n  };\r\n  headerCustomComponent = (id: string, list: any[]) => {\r\n    return (\r\n      <HeaderVEditableList textcolor={'#fff'}>\r\n        <div style={{ marginRight: 2, marginTop: 15 }}>\r\n          <Tooltip\r\n            usePortal\r\n            hoverCloseDelay={0}\r\n            position={'bottom'}\r\n            content={this.props.toolTipAdd ? this.props.toolTipAdd : 'Add element'}\r\n          >\r\n            <VSelectField\r\n              fieldState={this.form.$.fieldselect}\r\n              id={id.concat(this.props.id)}\r\n              onChange={this.onSlectItem}\r\n              fill\r\n              inline\r\n              minimal\r\n              options={list}\r\n              icon={'plus'}\r\n              iconOnly\r\n            />\r\n          </Tooltip>\r\n        </div>\r\n        <Tooltip\r\n          usePortal\r\n          hoverCloseDelay={0}\r\n          position={'bottom'}\r\n          content={this.props.toolTipAdd ? this.props.toolTipDel : 'Delete element(s)'}\r\n        >\r\n          <Button\r\n            icon=\"minus\"\r\n            minimal\r\n            onClick={() => {\r\n              this.onDeleteItem();\r\n            }}\r\n          />\r\n        </Tooltip>\r\n      </HeaderVEditableList>\r\n    );\r\n  };\r\n  render() {\r\n    const { selection, elevation, className, padding, height, headerText, id, headerColor, headerBgColor } = this.props;\r\n    return (\r\n      <VCardPanel\r\n        headerText={headerText}\r\n        bodyPadding={'1px'}\r\n        headerBackgroundColor={headerBgColor || '#3d3d3d'}\r\n        headerColor={headerColor || '#FFFFFF'}\r\n        headerCustomComponent={this.props.hideBtn ? <></> : this.headerCustomComponent(id, this.state.listSelect)}\r\n      >\r\n        <StyledMenu className={`${this.getElevation(elevation || 0)} ${className}`} padding={padding} height={height}>\r\n          {this.state.listItems.map(element => {\r\n            const active = this.isActive(element);\r\n            const backgroundColor = !!selection && !!selection.background ? selection!.background : '#BFCCD6';\r\n            const textColor = !!selection && !!selection.textColor ? selection!.textColor : '#10161A';\r\n            return (\r\n              <StyledMenuItem\r\n                key={element.value}\r\n                active={active}\r\n                background={backgroundColor}\r\n                color={textColor}\r\n                text={element.label}\r\n                onClick={() => {\r\n                  this.onItemClick(active, element);\r\n                }}\r\n                icon={element.icon}\r\n              />\r\n            );\r\n          })}\r\n        </StyledMenu>\r\n      </VCardPanel>\r\n    );\r\n  }\r\n}\r\n","import React, { ReactNode } from 'react';\r\nimport { VCardPanel, VSpinner, VTable } from 'gsi-vx-ui';\r\nimport { DeliveryContext, IDeliveryContext } from '../DeliveryExceptionsComponent';\r\nimport { Icon } from '@blueprintjs/core';\r\nimport { AppThemeContext, ITheme } from '../../../../../../../App';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { upperCase } from 'lodash';\r\n\r\nconst ThemeConsumer = AppThemeContext.Consumer;\r\ninterface IListExceptions extends InjectedIntlProps {\r\n  listExceptions: any[];\r\n}\r\nconst renderCustomer = (value: string): ReactNode => {\r\n  return (\r\n    <div>\r\n      <Icon icon=\"flag\" iconSize={17} color=\"#DB3737\" />\r\n    </div>\r\n  );\r\n};\r\nconst renderCustomerType = (value: string): ReactNode => {\r\n  const colorType = value === '1' ? '#10161A' : '#DB3737';\r\n  return (\r\n    <div>\r\n      <Icon icon=\"phone\" iconSize={17} color={colorType} />\r\n    </div>\r\n  );\r\n};\r\nconst ListDeliveryExceptions: React.FunctionComponent<IListExceptions> = (props: IListExceptions): JSX.Element => {\r\n  return (\r\n    <DeliveryContext.Consumer>\r\n      {value => (\r\n        <ThemeConsumer>\r\n          {(themeConsumer: ITheme) =>\r\n            themeConsumer && (\r\n              <DeliveryContext.Consumer>\r\n                {(deliveryConsumer: IDeliveryContext) =>\r\n                  deliveryConsumer && (\r\n                    <VCardPanel\r\n                      headerText={`${props.intl.formatMessage({ id: 'delivery.order.review.textDelExcep' })} (${\r\n                        deliveryConsumer.total\r\n                      })`}\r\n                      bodyPadding={'1px'}\r\n                      headerTextJustify={'center'}\r\n                      headerBackgroundColor={themeConsumer.headers}\r\n                      headerColor={themeConsumer.sidebar_text}\r\n                    >\r\n                      {value.isLoading ? (\r\n                        <VSpinner />\r\n                      ) : (\r\n                        <VTable\r\n                          cellSelectionType={'ENTIRE_ROW'}\r\n                          striped\r\n                          columns={[\r\n                            'delStatus',\r\n                            'accountId',\r\n                            'name',\r\n                            'orderId',\r\n                            'orderStatus',\r\n                            'type',\r\n                            'productName',\r\n                            'orderDate',\r\n                            'qty',\r\n                            'lastDate',\r\n                            'lastDelQty',\r\n                            'lastDelDriver'\r\n                          ]}\r\n                          enableColumnResizing={true}\r\n                          typeHeightRow={'HALF'}\r\n                          widgetsCell={[\r\n                            {\r\n                              column: 'delStatus',\r\n                              widget: { type: 'CUSTOMERCOMPONENT', cusmtomerCell: { renderCustomer } }\r\n                            },\r\n                            {\r\n                              column: 'type',\r\n                              widget: {\r\n                                type: 'CUSTOMERCOMPONENT',\r\n                                cusmtomerCell: { renderCustomer: renderCustomerType }\r\n                              }\r\n                            }\r\n                          ]}\r\n                          columns_name={{\r\n                            delStatus: props.intl.formatMessage({ id: 'delivery.order.review.cmDelSt' }),\r\n                            accountId: props.intl.formatMessage({ id: 'delivery.order.review.cmAccId' }),\r\n                            orderId: props.intl.formatMessage({ id: 'delivery.order.review.cmTickNo' }),\r\n                            orderStatus: upperCase(\r\n                              props.intl.formatMessage({ id: 'delivery.order.open.order_status' })\r\n                            ),\r\n                            orderDate: upperCase(props.intl.formatMessage({ id: 'delivery.order.open.order_date' })),\r\n                            name: upperCase(props.intl.formatMessage({ id: 'delivery.order.open.name' })),\r\n                            productName: upperCase(props.intl.formatMessage({ id: 'delivery.order.open.product' })),\r\n                            qty: upperCase(props.intl.formatMessage({ id: 'delivery.order.open.order_qty' })),\r\n                            lastDate: props.intl.formatMessage({ id: 'delivery.order.review.cmLastDate' }),\r\n                            lastDelQty: props.intl.formatMessage({ id: 'delivery.order.review.cmLastQty' }),\r\n                            type: upperCase(props.intl.formatMessage({ id: 'delivery.order.open.order_type' })),\r\n                            lastDelDriver: upperCase(\r\n                              props.intl.formatMessage({ id: 'delivery.order.review.cmLastDriver' })\r\n                            )\r\n                          }}\r\n                          columnWidths={[100, 100, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120]}\r\n                          data={props.listExceptions}\r\n                        />\r\n                      )}\r\n                    </VCardPanel>\r\n                  )\r\n                }\r\n              </DeliveryContext.Consumer>\r\n            )\r\n          }\r\n        </ThemeConsumer>\r\n      )}\r\n    </DeliveryContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ListDeliveryExceptions);\r\n","import React, { Component } from 'react';\r\nimport { VDateTimePicker, VInputField } from 'gsi-vx-ui';\r\nimport { Col, Row } from 'react-flexbox-grid';\r\nimport { FieldsCol, NumberField, SearchCol } from '../../order_management/style';\r\nimport { VEditableList } from '../../../../../../commons/components/editable_list/VEditableList';\r\nimport Styled from 'styled-components';\r\nimport { FieldState, FormState } from 'formstate';\r\nimport moment from 'moment';\r\nimport { AppThemeContext, ITheme } from '../../../../../../../App';\r\nimport { DeliveryContext, IDeliveryContext } from '../DeliveryExceptionsComponent';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\n\r\nconst ThemeConsumer = AppThemeContext.Consumer;\r\n\r\nconst ColumnArea = Styled(Col)`\r\npadding:10px;\r\ndisplay:flex;\r\nflex-direction:row;\r\n`;\r\ninterface IFilterExceptions extends InjectedIntlProps {\r\n  onSearchChange(data: any): void;\r\n  onStatusChange(data: any[]): void;\r\n  onChangeDate(start: any, end: any): void;\r\n  endDate: any;\r\n  startDate: any;\r\n}\r\n\r\nclass FilterExceptions extends Component<IFilterExceptions> {\r\n  form: FormState<any>;\r\n  constructor(props: IFilterExceptions) {\r\n    super(props);\r\n    this.form = new FormState({\r\n      dateMayorIgual: new FieldState(this.props.startDate ? this.props.startDate.toDate() : null),\r\n      dateMenorIgual: new FieldState(this.props.endDate ? this.props.endDate.toDate() : null),\r\n      day: new FieldState(''),\r\n      search: new FieldState('')\r\n    });\r\n  }\r\n\r\n  changeDays = () => {\r\n    const start = this.form.$.dateMayorIgual.value && moment(this.form.$.dateMayorIgual.value);\r\n    const end = this.form.$.dateMenorIgual.value && moment(this.form.$.dateMenorIgual.value);\r\n    this.props.onChangeDate(start, end);\r\n    if (start && end) {\r\n      const diff_days = end.diff(start, 'days');\r\n      const days = diff_days && diff_days > 0 ? diff_days : '';\r\n      this.form.$.day.onChange(days);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <ThemeConsumer>\r\n        {(themeConsumer: ITheme) =>\r\n          themeConsumer && (\r\n            <DeliveryContext.Consumer>\r\n              {(deliveryConsumer: IDeliveryContext) => (\r\n                <>\r\n                  <Row>\r\n                    <FieldsCol lg={8} sm={12}>\r\n                      <VDateTimePicker\r\n                        onChange={this.changeDays}\r\n                        label={this.props.intl.formatMessage({ id: 'delivery.order.review.startDate' })}\r\n                        dateType={'DATE'}\r\n                        fieldState={this.form.$.dateMayorIgual}\r\n                        id={'idstartDateExceptions'}\r\n                      />\r\n                      <VDateTimePicker\r\n                        value={''}\r\n                        label={this.props.intl.formatMessage({ id: 'delivery.order.review.endDate' })}\r\n                        dateType={'DATE'}\r\n                        fieldState={this.form.$.dateMenorIgual}\r\n                        onChange={this.changeDays}\r\n                        id={'idendDateExceptions'}\r\n                      />\r\n                      <NumberField\r\n                        type={'text'}\r\n                        disabled\r\n                        id={'iddays'}\r\n                        label={this.props.intl.formatMessage({ id: 'delivery.order.review.days' })}\r\n                        fieldState={this.form.$.day}\r\n                        layer={{ inputWidth: 8, labelWidth: 7 }}\r\n                      />\r\n                    </FieldsCol>\r\n                    <SearchCol lg={4} sm={12}>\r\n                      <div style={{ width: 213, marginTop: 30 }}>\r\n                        <VInputField\r\n                          fieldState={this.form.$.search}\r\n                          placeholder={this.props.intl.formatMessage({ id: 'delivery.order.review.ticketSearch' })}\r\n                          fill\r\n                          onChange={this.props.onSearchChange}\r\n                          id={'idsearchexceptions'}\r\n                          type={'search'}\r\n                          leftIcon={'search'}\r\n                        />\r\n                      </div>\r\n                    </SearchCol>\r\n                  </Row>\r\n                  <Row>\r\n                    <ColumnArea>\r\n                      <div style={{ width: 300 }}>\r\n                        <VEditableList\r\n                          hideBtn\r\n                          height={'200px'}\r\n                          headerBgColor={themeConsumer.headers}\r\n                          headerColor={themeConsumer.sidebar_text}\r\n                          elementsSelected={deliveryConsumer.listStatus}\r\n                          listSelectElements={deliveryConsumer.listStatus}\r\n                          headerText={this.props.intl.formatMessage({ id: 'delivery.order.open.order_status' })}\r\n                          id={'idVEditableExcep'}\r\n                          onSelect={() => {}}\r\n                          onItemClick={(data: any) => {\r\n                            this.props.onStatusChange(data);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </ColumnArea>\r\n                  </Row>\r\n                </>\r\n              )}\r\n            </DeliveryContext.Consumer>\r\n          )\r\n        }\r\n      </ThemeConsumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(FilterExceptions);\r\n","import React from 'react';\r\nimport { Col, Row } from 'react-flexbox-grid';\r\nimport { Button } from '@blueprintjs/core';\r\nimport styled from 'styled-components';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\n\r\nconst style = { marginBottom: 5, width: 200 };\r\nconst SButton = styled(Button)`\r\n  & span.bp3-icon {\r\n    color: #db3737 !important;\r\n  }\r\n`;\r\ninterface IActions extends InjectedIntlProps {}\r\nconst ExceptionsActions: React.FunctionComponent<IActions> = (props: IActions): JSX.Element => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col sm={12} lg={6} style={{ display: 'flex' }}>\r\n          <SButton icon={'flag'} style={{ ...style, marginLeft: 1 }}>\r\n            {props.intl.formatMessage({ id: 'delivery.order.review.btnCreateOpen' })}\r\n          </SButton>\r\n          <Button icon={'tick'} style={{ ...style, marginLeft: 5 }}>\r\n            {props.intl.formatMessage({ id: 'delivery.order.review.btnMarkCancel' })}\r\n          </Button>\r\n        </Col>\r\n        <Col sm={12} lg={6} style={{ display: 'flex', flexDirection: 'row-reverse' }}>\r\n          <Button icon={'export'} style={{ ...style, marginLeft: 1 }}>\r\n            {props.intl.formatMessage({ id: 'delivery.order.review.btn_export_excel' })}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ExceptionsActions);\r\n","import React, { Component } from 'react';\r\nimport ListDeliveryExceptions from './list_exceptions/ListDeliveryExceptions';\r\nimport FilterExceptions from './filter_exceptions/FilterExceptions';\r\nimport ExceptionsActions from './exceptions_actions/ExceptionsActions';\r\nimport { Col, Row } from 'react-flexbox-grid';\r\nimport styled from 'styled-components';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DeliveryExceptionStore } from '../../stores/DeliveryExceptionStore';\r\n\r\nconst SCol = styled(Col)`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\nexport interface IDeliveryContext {\r\n  listStatus: any[];\r\n  total?: number;\r\n  isLoading?: boolean;\r\n}\r\nexport const DeliveryContext = React.createContext<IDeliveryContext>({\r\n  listStatus: [],\r\n  total: 0,\r\n  isLoading: false\r\n});\r\ninterface IDeliveryExceptions {\r\n  delivery_exceptions_store?: DeliveryExceptionStore;\r\n}\r\n@inject('delivery_exceptions_store')\r\n@observer\r\nclass DeliveryExceptionsComponent extends Component<IDeliveryExceptions> {\r\n  constructor(props: IDeliveryExceptions) {\r\n    super(props);\r\n  }\r\n  onSearchChange = (data: any) => {\r\n    this.props.delivery_exceptions_store!.searchChange(data);\r\n  };\r\n  onDates = (start: any, end: any) => {\r\n    this.props.delivery_exceptions_store!.setDates(start, end);\r\n  };\r\n  onStatusChange = (data: any[]) => {\r\n    const status = data.map((d: any) => d.value);\r\n    this.props.delivery_exceptions_store!.statusChange(status);\r\n  };\r\n\r\n  render() {\r\n    const { elements, count, isLoading, listStatus, moqEndDate, moqStartDate } = this.props.delivery_exceptions_store!;\r\n    return <DeliveryContext.Provider value={{ listStatus, isLoading, total: count }}>\r\n        <Row>\r\n          <Col xs={12} sm={6}>\r\n            <div style={{ margin: 5 }}>\r\n              <FilterExceptions onSearchChange={this.onSearchChange} endDate={moqEndDate} startDate={moqStartDate} onChangeDate={this.onDates} onStatusChange={this.onStatusChange} />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <div style={{ margin: 5 }}>\r\n          <ListDeliveryExceptions listExceptions={elements}/>\r\n        </div>\r\n        <div style={{ margin: 5 }}>\r\n          <ExceptionsActions  />\r\n        </div>\r\n      </DeliveryContext.Provider>;\r\n  }\r\n}\r\n\r\nexport default DeliveryExceptionsComponent;\r\n"],"sourceRoot":""}