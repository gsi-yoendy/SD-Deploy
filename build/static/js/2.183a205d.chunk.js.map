{"version":3,"sources":["modules/delivery/modules/order_management/components/open_orders/style.tsx","modules/delivery/modules/order_management/components/open_orders/delivery_type/ListDeliveryTypeComponent.tsx","modules/delivery/modules/order_management/components/open_orders/order_details/order_details_fees_actions/OrderDetailsFeesActions.tsx","modules/delivery/modules/order_management/components/open_orders/order_details/order_details_fees/OrderDetailsFees.tsx","modules/delivery/modules/order_management/commons/Validators.ts","modules/delivery/modules/order_management/components/open_orders/order_details/OrderDetailsComponent.tsx","modules/delivery/modules/order_management/components/open_orders/open/ListOpenOrdersComponent.tsx","modules/delivery/modules/order_management/components/open_orders/open/OpenOrdersComponent.tsx","modules/delivery/modules/order_management/components/open_orders/incomplete/ListIncompleteComponent.tsx","modules/delivery/modules/order_management/components/open_orders/incomplete/IncompleteComponent.tsx","modules/delivery/modules/order_management/components/open_orders/duplicate/ListDuplicateComponent.tsx","modules/delivery/modules/order_management/components/open_orders/duplicate/DuplicateComponent.tsx","modules/delivery/modules/order_management/components/open_orders/ungeo_orders/ListUngeoOrders.tsx","modules/delivery/modules/order_management/components/open_orders/ungeo_orders/UnGeoOrdersComponent.tsx","modules/delivery/modules/order_management/components/open_orders/list_orders/ListOrdersComponent.tsx","modules/delivery/modules/order_management/components/open_orders/bottom_actions/BottomActionsComponent.tsx","modules/delivery/modules/order_management/components/open_orders/filter_component/FilterFormComponent.tsx","modules/delivery/modules/order_management/components/open_orders/dialog_filter/DialogFilterComponent.tsx","modules/delivery/modules/order_management/components/open_orders/search_account/components/search_criteria_actions/SearchCriteriaActions.tsx","modules/delivery/modules/order_management/components/open_orders/search_account/components/search_criteria_account_form/SearchCriteriaAccountForm.tsx","modules/delivery/modules/order_management/components/open_orders/search_results/SearchResults.tsx","modules/delivery/modules/order_management/components/open_orders/order_history/OrderHistory.tsx","modules/delivery/modules/order_management/components/open_orders/search_account/SearchAccount.tsx","modules/delivery/modules/order_management/components/open_orders/dialog_create_account/DialogCreateAccount.tsx","modules/delivery/modules/order_management/components/open_orders/OrdersComponent.tsx"],"names":["SVCheckboxField","styled","VCheckboxField","_templateObject","styleButton","marginBottom","width","maxHeight","SCol","Col","_templateObject2","SButtonDown","Button","_templateObject3","SVInputField","VInputField","_templateObject4","OrderConsumer","OrderContext","Consumer","FilterBy","AppThemeContext","div","ListDeliveryTypeComponent_templateObject","ListDeliveryTypeComponent","inject","observer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","form","initForm","FormState","select_profile","FieldState","chkFilter","chkUngeocodedOnly","fSearch","startOrderDate","endOrderDate","days","headerCustomComponent","disable","activeList","filterBy","intl","formatMessage","id","react_default","a","createElement","orderContext","label","concat","alignIndicator","inline","disabled","fieldState","$","onChange","onChangeFilter","state","clearSelection","_this2","_this$props","urgency_summary_store","selType","isLoading","App","themeContext","gsi_vx_ui_lib","headerText","bodyPadding","headerTextJustify","headerBackgroundColor","headers","headerColor","isOrdersLoading","columns","data","elements","cellSelectionType","actionsSelection","onSelectionChange","listTypeClick","typeHeightRow","configColumnsHeader","column","textColor","backgroundColor","columnWidths","widgetsCell","widget","type","cusmtomerCell","renderCustomer","renderDeliveryType","columns_name","orderType","upperCase","unGeo","incomplete","duplicate","urgency1","urgency2","urgency3","urgency4","total","urgency5","Component","injectIntl","fees","FOrderFeeContext","React","createContext","onSelectFee","e","onDelFee","listFees","dataFee","WraperActions","Row","OrderDetailsFeesActions_templateObject","OrderDetailsFeesActions","fieldselect","value","lib","xs","tooltip","usePortal","hoverCloseDelay","position","content","defaultMessage","style","marginTop","fill","minimal","options","icon","iconOnly","element","buttons","onClick","OrderDetailsFees","OrderDetailsFees_FOrderFeeContext","height","order_details_fees_actions_OrderDetailsFeesActions","tableHeight","reordering","description","overrideFee","edit","editColumn","onSave","invalidDataMessage","invalidColumns","showToastNotification","message","join","timeout","editToolbar","textSave","textCancel","iconCancel","iconEdit","iconSave","setState","objectSpread","onlyNumber","num","Number","isFinite","required","val","uniqueArray","uArray","uniqWith","cloneDeep","isEqual","size","SVDate","VDateTimePicker","OrderDetailsComponent_templateObject","OrderDetailsComponent","orderDetails","order_management_store","moment","locale","productId","onSelectProduct","date","orderDate","toDate","accountId","acctId","fsname","name","fsaddress","address","orderId","ordQty","qty","validators","ordDate","fscity","city","fsStateProv","tankSize","tanksize","orderTypeId","fillTypeId","toString","fixed","price","skipContracts","remarks","slipOrder","orderAdditionalFees","listDetailsFees","updateForm","onSubmit","action","getFormValue","validate","then","res","hasError","fieldError","getFees","onCancel","preventDefault","onAddFee","addFee","onRemoveFee","delFee","onEditFee","layer","labelWidth","inputWidth","labelOrientation","inputOrientation","_this$props2","_ref","listProducts","listTypes","listSelectFees","listFillTypes","OrderDetailsComponent_OrderConsumer","padding","sm","lg","className","Classes","SKELETON","dateType","leftIcon","OrderDetailsComponent_FOrderFeeContext","Provider","order_details_fees_OrderDetailsFees","divider","end","intent","onSaveOrders","disableSave","text","ListOpenOrdersComponent","onSelectRow","onSelect","ListOpenOrdersComponent_OrderConsumer","striped","enableColumnResizing","renderCustom","lastDate","geo","orders","footer","PagePaginatorComponent","currentPage","page","onPageChanged","onPageChange","pageLimit","pageSize","totalRecords","totalOrder","OpenOrdersComponent","onChangeDays","open_orders_store","addFilter","field","operator","removeFilter","filter","updateFilterType","setFilterByUrgency","disposeOnUnmount","assertThisInitialized","reaction","setOpenDetails","setElement","resetElement","setCmpMount","getElements","paginationData","setSize","setPage","isDetailsOpen","count","OpenOrdersComponent_OrderConsumer","totalOrders","open_ListOpenOrdersComponent","bind","renderCustomerType","onSelectOpen","dialog","isOpen","canOutsideClickClose","onClose","handleCloseDetails","paddingBottom","canEscapeKeyClose","CustomComponent","order_details_OrderDetailsComponent","handleSaveDetails","nofees","onRowClick","ListIncompleteComponent_OrderConsumer","error","IncompleteComponent","incomplete_orders_store","onSelectOrder","setFilterBySummary","openDetails","margin","IncompleteComponent_OrderConsumer","incomplete_ListIncompleteComponent","ListDuplicateComponent","ListDuplicateComponent_OrderConsumer","orderStatus","colortype","customerName","productName","lastDelQty","lastDelDriver","DuplicatesComponent","initializerDefineProperty","_descriptor","duplicate_orders_store","loadOrders","activeDrop","DuplicateComponent_OrderConsumer","Fragment","defaultActive","duplicate_ListDuplicateComponent","observable","noungeoorders","noorders","ListUngeoOrders_OrderConsumer","UnGeoOrdersComponent","ungeo_store","UnGeoOrdersComponent_OrderConsumer","ListUngeoOrders","onSelectOrders","ListOrdersComponent","filterByUrgency","searchDays","open_OpenOrdersComponent","incomplete_IncompleteComponent","DuplicateComponent","ungeo_orders_UnGeoOrdersComponent","BottomActionsComponent_OrderConsumer","onSearchByDays","refresOrder","display","flexDirection","marginRight","onExportExcel","isOrderMLoading","refreshList","FilterFormComponent","newProfile","products","zones","urgencies","orderTypes","endDate","endOrderQuantity","startDate","startOrderQuantity","startTankPercent","endTankPercent","showReturnedOrders","showUnGeocodeOrders","excludeCreditHolds","showOpenOrders","excludeBalances","showMarkedOrders","profileId","featureName","active","urgencyFactors","obj","onSelectProfile","asyncToGenerator","regenerator_default","mark","_callee","idprofile","profile","newEndDate","newStartDate","wrap","_context","prev","next","advancedProfiles","find","p","getProducts","sent","getOrderTypes","getZones","getUrgencies","idelements","changeDays","stop","_x","apply","arguments","onAddCancelProfile","reset","map","push","o","ordTypeName","orderTypeid","z","zoneName","zoneId","u","key","isOnList","list","l","updateList","listSelected","length","start","diff_days","diff","getProfileInput","listProfiles","defaultText","getEditableListInputs","productList","zoneslist","urgencylist","typeslist","_this$state","md","VEditableList","elementsSelected","toolTipAdd","headerBgColor","sidebar_text","toolTipDel","listSelectElements","getTextCheckFields","layerNumber","checkBoxAtLeft","layerCheck","getDateInputFields","large","DialogFilterComponent","open","changeOpen","handleSaveFilters","updateProfile","saveProfile","listZone","listUrgency","filter_component_FilterFormComponent","WhiteButton","AnchorButton","SearchCriteriaActions_templateObject","SearchCriteriaActions","FFilterAccContext","onSearchAcc","loadingAccount","onClearSearchAcc","SearchCriteriaAccountForm","states","search_criteria_actions_SearchCriteriaActions","stateProv","SearchResults","nameHeader","getNameHeader","numberAccount","headerHorizontalAlign","onOrderColumns","onSelectAcct","fullAddress","onPageChg","justifyContent","onCreateOrder","disableBtn","result","OrderHistory","FCreateOrderContext","OrderHistory_OrderConsumer","orderdate","truck","img","getCancelAndCloseTextFormated","onCancelOrder","SearchAccount","onSearchAccount","accounts_orders_store","onEraserSearch","history_orders_store","onSaveOrder","onReorderAcc","setColumnsAcc","getOrderDetailsComponent","onCloseDetails","store","obj_store","listStates","_ref2","search_criteria_account_form_SearchCriteriaAccountForm","search_results_SearchResults","columnsAcc","order_history_OrderHistory","DialogCreateAccount","DIALOG_BODY","DialogCreateAccount_OrderConsumer","search_account_SearchAccount","handleOnSaveOrders","OrdersComponent","search","profileActive","chkAllOrder","changeFilter","orders_store","changeFilterByUrgency","raiseDoSearchWhenUserStoppedTyping","debounce","setSearchList","setOrderDetails","_ref3","OrdersComponent_OrderConsumer","delivery_type_ListDeliveryTypeComponent","alignItems","placeholder","selectProfile","clearProfile","dialog_filter_DialogFilterComponent","dialog_create_account_DialogCreateAccount","list_orders_ListOrdersComponent","bottom_actions_BottomActionsComponent"],"mappings":"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","file":"static/js/2.183a205d.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { VCheckboxField, VInputField } from 'gsi-vx-ui';\r\nimport { Col } from 'react-flexbox-grid';\r\nimport { Button } from '@blueprintjs/core';\r\n\r\nexport const SVCheckboxField = styled(VCheckboxField)`\r\n  color: #ffffff;\r\n`;\r\n\r\nexport const styleButton = { marginBottom: 5, width: 200, maxHeight: 20 };\r\nexport const SCol = styled(Col)`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n`;\r\nexport const SButtonDown = styled(Button)`\r\n  @media screen and (min-width: 650px) {\r\n    position: relative;\r\n    right: 76px;\r\n  }\r\n  margin-right: 5px;\r\n  height: 30px;\r\n`;\r\nexport const SVInputField = styled(VInputField)`\r\n  width: 100% !important;\r\n  margin: 0px 0px 0px 10px;\r\n  !important & label {\r\n    padding-top: 1px;\r\n    padding-left: 4px;\r\n    width: 100% !important;\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n  }\r\n  & input {\r\n    width: 100% !important;\r\n    margin: 0px !important;\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { VCardPanel, VSpinner, VTable } from 'gsi-vx-ui';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { FieldState, FormState } from 'formstate';\r\nimport { SVCheckboxField } from '../style';\r\nimport { AppThemeContext } from '../../../../../../../App';\r\nimport { upperCase } from 'lodash';\r\nimport { IOrderContext, OrderContext } from '../../../containers/OrderManagementContainer';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { UrgencySummaryStore } from '../../../stores/UrgencySummaryStore';\r\nimport { CellSelectionType } from 'gsi-vx-ui/lib/types/Table/type';\r\nimport styled from 'styled-components';\r\nimport { ITheme } from '../../../../../../../core/stores/AppStore';\r\n\r\nconst OrderConsumer = OrderContext.Consumer;\r\n\r\nconst ThemeConsumer = AppThemeContext.Consumer;\r\n\r\nconst FilterBy = styled.div`\r\n  margin-right: 20px;\r\n  margin-top: 15px;\r\n  width: 245px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\ninterface IListProps extends InjectedIntlProps {\r\n  urgency_summary_store?: UrgencySummaryStore;\r\n  selType: CellSelectionType;\r\n  onChangeFilter?(data: any): void;\r\n}\r\ninterface IListState {\r\n  clearSelection: boolean;\r\n}\r\n\r\n@inject('urgency_summary_store')\r\n@observer\r\nclass ListDeliveryTypeComponent extends Component<IListProps, IListState> {\r\n  form!: FormState<any>;\r\n  constructor(props: IListProps) {\r\n    super(props);\r\n    this.initForm();\r\n  }\r\n  initForm = () => {\r\n    const form = new FormState<any>({\r\n      select_profile: new FieldState(''),\r\n      chkFilter: new FieldState(true),\r\n      chkUngeocodedOnly: new FieldState(''),\r\n      fSearch: new FieldState(''),\r\n      startOrderDate: new FieldState(''),\r\n      endOrderDate: new FieldState(''),\r\n      days: new FieldState('')\r\n    });\r\n    this.form = form;\r\n  };\r\n  headerCustomComponent = (disable: boolean, activeList: string) => {\r\n    let filterBy = this.props.intl.formatMessage({ id: 'delivery.order.open.filterByU' });\r\n    activeList !== 'open' && (filterBy = this.props.intl.formatMessage({ id: 'delivery.order.open.filterBy' }));\r\n    return (\r\n      <FilterBy>\r\n        <OrderConsumer>\r\n          {(orderContext: IOrderContext) =>\r\n            orderContext && (\r\n              <SVCheckboxField\r\n                id=\"idchekfield\"\r\n                label={`${this.props.intl.formatMessage({ id: 'delivery.order.open.filter' })} ${filterBy}`}\r\n                alignIndicator={'right'}\r\n                inline\r\n                disabled={disable}\r\n                fieldState={this.form.$.chkFilter}\r\n                onChange={this.props.onChangeFilter}\r\n              />\r\n            )\r\n          }\r\n        </OrderConsumer>\r\n      </FilterBy>\r\n    );\r\n  };\r\n  public state: IListState = {\r\n    clearSelection: false\r\n  };\r\n  render() {\r\n    const { intl, urgency_summary_store, selType } = this.props;\r\n    const { isLoading } = urgency_summary_store!;\r\n    return (\r\n      <AppThemeContext.Consumer>\r\n        {(themeContext: ITheme) =>\r\n          themeContext && (\r\n            <OrderConsumer>\r\n              {(orderContext: IOrderContext) =>\r\n                orderContext && (\r\n                  <VCardPanel\r\n                    headerText={`${intl.formatMessage({ id: 'delivery.order.open.title_list_urgency' })}`}\r\n                    bodyPadding={'0px'}\r\n                    headerTextJustify={'center'}\r\n                    headerBackgroundColor={themeContext.headers}\r\n                    headerColor={'#FFFFFF'}\r\n                    headerCustomComponent={this.headerCustomComponent(\r\n                      orderContext.isOrdersLoading,\r\n                      orderContext.activeList\r\n                    )}\r\n                  >\r\n                    {isLoading ? (\r\n                      <VSpinner />\r\n                    ) : (\r\n                      <VTable\r\n                        columns={[\r\n                          'orderType',\r\n                          'incomplete',\r\n                          'duplicate',\r\n                          'unGeo',\r\n                          'urgency1',\r\n                          'urgency2',\r\n                          'urgency3',\r\n                          'urgency4',\r\n                          'urgency5',\r\n                          'total'\r\n                        ]}\r\n                        data={urgency_summary_store!.elements}\r\n                        cellSelectionType={selType}\r\n                        actionsSelection={{\r\n                          clearSelection: this.state.clearSelection,\r\n                          onSelectionChange: orderContext.listTypeClick\r\n                        }}\r\n                        typeHeightRow={'HALF'}\r\n                        configColumnsHeader={[\r\n                          { column: 'urgency1', textColor: '#FFFFFF', backgroundColor: '#1b242a' },\r\n                          { column: 'urgency2', textColor: '#FFFFFF', backgroundColor: '#f24444' },\r\n                          { column: 'urgency3', textColor: '#FFFFFF', backgroundColor: '#ffd307' },\r\n                          { column: 'urgency4', textColor: '#FFFFFF', backgroundColor: '#20a8a4' },\r\n                          { column: 'urgency5', textColor: '#FFFFFF', backgroundColor: '#4bacef' }\r\n                        ]}\r\n                        columnWidths={[140, 120, 120]}\r\n                        widgetsCell={[\r\n                          {\r\n                            column: 'orderType',\r\n                            widget: {\r\n                              type: 'CUSTOMERCOMPONENT',\r\n                              cusmtomerCell: { renderCustomer: orderContext.renderDeliveryType }\r\n                            }\r\n                          }\r\n                        ]}\r\n                        columns_name={{\r\n                          orderType: upperCase(intl.formatMessage({ id: 'delivery.order.open.delivery_type' })),\r\n                          unGeo: this.props.intl.formatMessage({ id: 'delivery.order.open.unGeo' }),\r\n                          incomplete: this.props.intl.formatMessage({ id: 'delivery.order.open.cmIncomplete' }),\r\n                          duplicate: this.props.intl.formatMessage({ id: 'delivery.order.open.cmDuplicadas' }),\r\n                          urgency1: this.props.intl.formatMessage({ id: 'delivery.order.open.cmUrge_one' }),\r\n                          urgency2: this.props.intl.formatMessage({ id: 'delivery.order.open.cmUrge_two' }),\r\n                          urgency3: this.props.intl.formatMessage({ id: 'delivery.order.open.cmUrge_three' }),\r\n                          urgency4: this.props.intl.formatMessage({ id: 'delivery.order.open.cmUrge_four' }),\r\n                          total: this.props.intl.formatMessage({ id: 'delivery.order.open.unTotal' }),\r\n                          urgency5: this.props.intl.formatMessage({ id: 'delivery.order.open.cmUrge_five' })\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </VCardPanel>\r\n                )\r\n              }\r\n            </OrderConsumer>\r\n          )\r\n        }\r\n      </AppThemeContext.Consumer>\r\n    );\r\n  }\r\n}\r\nexport default injectIntl(ListDeliveryTypeComponent);\r\n","import React, { Component } from 'react';\r\nimport { Button, Tooltip } from '@blueprintjs/core';\r\nimport styled from 'styled-components';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { Col, Row } from 'react-flexbox-grid';\r\nimport { VSelectField } from 'gsi-vx-ui';\r\nimport { FieldState, FormState } from 'formstate';\r\n\r\nconst fees: any[] = [];\r\nconst datafees: any[] = [];\r\nexport const FOrderFeeContext = React.createContext({\r\n  onSelectFee: (e: any) => {},\r\n  onDelFee: (e: any) => {},\r\n  listFees: fees,\r\n  dataFee: fees,\r\n  isLoading: false\r\n});\r\n\r\nconst WraperActions = styled(Row)`\r\n  padding: 5px;\r\n`;\r\n\r\ninterface IPropsActions extends InjectedIntlProps {\r\n  element: any;\r\n}\r\n\r\nclass OrderDetailsFeesActions extends Component<IPropsActions> {\r\n  form!: FormState<any>;\r\n  constructor(props: IPropsActions) {\r\n    super(props);\r\n    this.form = new FormState<any>({\r\n      fieldselect: new FieldState('')\r\n    });\r\n  }\r\n  render() {\r\n    const { intl } = this.props;\r\n    return (\r\n      <FOrderFeeContext.Consumer>\r\n        {value => (\r\n          <WraperActions>\r\n            <Col xs={6}>\r\n              <Tooltip\r\n                usePortal\r\n                hoverCloseDelay={0}\r\n                position={'bottom'}\r\n                content={intl.formatMessage({\r\n                  id: 'delivery.order.open.addFees',\r\n                  defaultMessage: 'Add Feed'\r\n                })}\r\n              >\r\n                <div style={{ marginTop: 15 }}>\r\n                  <VSelectField\r\n                    fieldState={this.form.$.fieldselect}\r\n                    id={'idfieldselectfee'}\r\n                    onChange={value.onSelectFee}\r\n                    fill\r\n                    inline\r\n                    minimal\r\n                    options={value.listFees}\r\n                    icon={'plus'}\r\n                    iconOnly\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <div style={{ marginTop: 15 }}>\r\n                {!this.props.element ? (\r\n                  <Button\r\n                    disabled={!this.props.element}\r\n                    onClick={() => {\r\n                      value.onDelFee(this.props.element);\r\n                    }}\r\n                    icon={'trash'}\r\n                    fill\r\n                    minimal\r\n                  />\r\n                ) : (\r\n                  <Tooltip\r\n                    usePortal\r\n                    position={'bottom'}\r\n                    hoverCloseDelay={0}\r\n                    content={intl.formatMessage({\r\n                      id: 'delivery.order.open.deleteFees',\r\n                      defaultMessage: 'Remove Feed'\r\n                    })}\r\n                  >\r\n                    <Button\r\n                      disabled={!this.props.element}\r\n                      onClick={() => {\r\n                        value.onDelFee(this.props.element);\r\n                      }}\r\n                      icon={'trash'}\r\n                      fill\r\n                      minimal\r\n                    />\r\n                  </Tooltip>\r\n                )}\r\n              </div>\r\n            </Col>\r\n          </WraperActions>\r\n        )}\r\n      </FOrderFeeContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(OrderDetailsFeesActions);\r\n","import React, { Component } from 'react';\r\nimport { showToastNotification, VCardPanel, VSpinner, VTable } from 'gsi-vx-ui';\r\nimport OrderDetailsFeesActions from '../order_details_fees_actions/OrderDetailsFeesActions';\r\nimport { AppThemeContext } from '../../../../../../../../App';\r\nimport { ITheme } from '../../../../../../../../core/stores/AppStore';\r\n\r\nconst fees: any[] = [];\r\nconst datafees: any[] = [];\r\nexport const FOrderFeeContext = React.createContext({\r\n  onSelectFee: (e: any) => {},\r\n  onDelFee: (e: any) => {},\r\n  listFees: fees,\r\n  dataFee: fees,\r\n  isLoading: false\r\n});\r\n\r\nconst styleDiv = { display: 'flex', alignItems: 'center', justifyContent: 'center' };\r\ninterface IDetailsFees {\r\n  element: any;\r\n}\r\nclass OrderDetailsFees extends Component<{}, IDetailsFees> {\r\n  public state: IDetailsFees = {\r\n    element: null\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FOrderFeeContext.Consumer>\r\n        {value =>\r\n          value.isLoading ? (\r\n            <VSpinner />\r\n          ) : (\r\n            <AppThemeContext.Consumer>\r\n              {(themeContext: ITheme) =>\r\n                themeContext && (\r\n                  <VCardPanel\r\n                    headerTextJustify={'center'}\r\n                    headerText={'Aditional Fees'}\r\n                    headerBackgroundColor={themeContext.headers}\r\n                    headerColor={'#FFFFFF'}\r\n                    height={'275px'}\r\n                    bodyPadding={'0'}\r\n                    headerCustomComponent={<OrderDetailsFeesActions element={this.state.element} />}\r\n                  >\r\n                    <VTable\r\n                      tableHeight={'206px'}\r\n                      columns={['description', 'fee', 'overrideFee']}\r\n                      data={value.dataFee || []}\r\n                      reordering\r\n                      typeHeightRow={'HALF'}\r\n                      columns_name={{\r\n                        description: 'Description',\r\n                        overrideFee: 'Overview Fee'\r\n                      }}\r\n                      cellSelectionType={'ENTIRE_ROW'}\r\n                      edit={{\r\n                        editColumn: {\r\n                          columns: ['fee', 'overrideFee']\r\n                        },\r\n                        onSave: (data: any) => {},\r\n                        invalidDataMessage: (invalidColumns: string[]) => {\r\n                          showToastNotification({\r\n                            type: 'danger',\r\n                            message: `No se puede guardar porq las siguiente columnas tienen datos invalidos: ${invalidColumns.join(\r\n                              ' , '\r\n                            )}`,\r\n                            timeout: 8000\r\n                          });\r\n                        },\r\n\r\n                        editToolbar: {\r\n                          textSave: 'Finish',\r\n                          textCancel: 'Cancel',\r\n                          iconCancel: 'cross',\r\n                          iconEdit: 'edit',\r\n                          iconSave: 'share'\r\n                        }\r\n                      }}\r\n                      actionsSelection={{\r\n                        onSelectionChange: (data: any) => {\r\n                          this.setState({ ...this.state, element: data });\r\n                        }\r\n                      }}\r\n                    />\r\n                  </VCardPanel>\r\n                )\r\n              }\r\n            </AppThemeContext.Consumer>\r\n          )\r\n        }\r\n      </FOrderFeeContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrderDetailsFees;\r\n","import { cloneDeep, isEqual, isFinite, size, uniqWith } from 'lodash';\r\n\r\nexport const onlyNumber = (value: any) => {\r\n  const num = Number(value);\r\n  return !!value && !isFinite(num) && 'Only number';\r\n};\r\nexport const required = (val: any) => !val && 'This field is required';\r\nexport const uniqueArray = (value: any[]) => {\r\n  const uArray = uniqWith(cloneDeep(value), isEqual);\r\n  return size(uArray) !== size(value) && 'Duplicate';\r\n};\r\n","import React, { Component } from 'react';\r\nimport { FieldState, FormState } from 'formstate';\r\nimport { Col, Row } from 'react-flexbox-grid';\r\nimport {\r\n  getFormValue,\r\n  showToastNotification,\r\n  VCardPanel,\r\n  VCheckboxField,\r\n  VDateTimePicker,\r\n  VInputField,\r\n  VSelectField,\r\n  VTextAreaField\r\n} from 'gsi-vx-ui';\r\nimport { ILayer } from 'gsi-vx-ui/lib/types/Form/Inputs/ILayer';\r\nimport OrderDetailsFees from './order_details_fees/OrderDetailsFees';\r\nimport { Button, Classes, Divider } from '@blueprintjs/core';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { onlyNumber, required, uniqueArray } from '../../../commons/Validators';\r\nimport { OrderManagementStore } from '../../../stores/OrderManagementStore';\r\nimport { inject, observer } from 'mobx-react';\r\nimport moment from 'moment';\r\nimport { AppThemeContext } from '../../../../../../../App';\r\nimport { OrderModel } from '../../../models/OrderModel';\r\nimport styled from 'styled-components';\r\nimport { IOrderContext, OrderContext } from '../../../containers/OrderManagementContainer';\r\nimport { ITheme } from '../../../../../../../core/stores/AppStore';\r\n\r\nconst OrderConsumer = OrderContext.Consumer;\r\n\r\nconst fees: any[] = [];\r\nconst datafees: any[] = [];\r\nconst SVDate = styled(VDateTimePicker)`\r\n  & label:before {\r\n    content: '* ';\r\n    padding-top: 1px;\r\n    position: relative;\r\n    bottom: 2px;\r\n    font-size: 12px;\r\n    color: #e21a1a;\r\n    text-align: start;\r\n  }\r\n`;\r\nexport const FOrderFeeContext = React.createContext({\r\n  onSelectFee: (e: any) => {},\r\n  onDelFee: (e: any) => {},\r\n  listFees: fees,\r\n  dataFee: fees,\r\n  isLoading: false\r\n});\r\ninterface IDetailsForm extends InjectedIntlProps {\r\n  nofees?: number;\r\n  order_management_store?: OrderManagementStore;\r\n  orderDetails: OrderModel;\r\n  disableSave?: boolean;\r\n  onSave(): void;\r\n  onCancel(): void;\r\n}\r\n@inject('order_management_store')\r\n@observer\r\nclass OrderDetailsComponent extends Component<IDetailsForm> {\r\n  form!: FormState<any>;\r\n\r\n  constructor(props: IDetailsForm) {\r\n    super(props);\r\n    this.initForm();\r\n  }\r\n\r\n  initForm = () => {\r\n    const { orderDetails, order_management_store, intl } = this.props;\r\n    moment.locale(intl.locale);\r\n    orderDetails.productId && this.onSelectProduct(orderDetails.productId);\r\n    const date = orderDetails.orderDate ? moment(orderDetails.orderDate).toDate() : moment().toDate();\r\n    this.form = new FormState<any>({\r\n      accountId: new FieldState(orderDetails.accountId || ''),\r\n      acctId: new FieldState(orderDetails.acctId || ''),\r\n      fsname: new FieldState(orderDetails.name || ''),\r\n      fsaddress: new FieldState(orderDetails.address || ''),\r\n      id: new FieldState(orderDetails.orderId || ''),\r\n      ordQty: new FieldState(orderDetails.qty || '').validators(onlyNumber),\r\n      ordDate: new FieldState(date || '').validators(required),\r\n      fscity: new FieldState(orderDetails.city || ''),\r\n      fsStateProv: new FieldState(orderDetails.state || ''),\r\n      tankSize: new FieldState(orderDetails.tanksize || ''),\r\n      productId: new FieldState(orderDetails.productId || ''),\r\n      orderTypeId: new FieldState(orderDetails.orderTypeId || ''),\r\n      fillTypeId: new FieldState(\r\n        orderDetails.fillTypeId || orderDetails.fillTypeId === 0 ? orderDetails.fillTypeId.toString() : ''\r\n      ),\r\n      fixed: new FieldState(''),\r\n      price: new FieldState(orderDetails.price || '').validators(onlyNumber),\r\n      skipContracts: new FieldState(orderDetails.skipContracts),\r\n      remarks: new FieldState(orderDetails.remarks || ''),\r\n      slipOrder: new FieldState(orderDetails.slipOrder),\r\n      orderAdditionalFees: new FieldState(order_management_store!.listDetailsFees).validators(uniqueArray)\r\n    });\r\n  };\r\n  updateForm = () => {\r\n    const { order_management_store } = this.props;\r\n    this.form.$.orderAdditionalFees.onChange(order_management_store!.listDetailsFees);\r\n  };\r\n  componentDidUpdate() {\r\n    this.updateForm();\r\n  }\r\n  onSubmit = (action: any) => {\r\n    const data = getFormValue(this.form);\r\n    this.form.validate().then(res => {\r\n      if (res.hasError) {\r\n        this.form.fieldError === 'Duplicate' &&\r\n          showToastNotification({ type: 'danger', message: 'You have Fees duplicate!', timeout: 1600 });\r\n      } else {\r\n        action(data, this.props.onSave);\r\n      }\r\n    });\r\n  };\r\n  onSelectProduct = (id: any) => {\r\n    this.props.order_management_store!.getFees(id);\r\n  };\r\n  onCancel = (e: any) => {\r\n    e.preventDefault();\r\n    this.props.onCancel();\r\n  };\r\n  onAddFee = (e: any) => {\r\n    this.props.order_management_store!.addFee(e);\r\n  };\r\n  onRemoveFee = (e: any) => {\r\n    this.props.order_management_store!.delFee(e);\r\n  };\r\n  onEditFee = (e: any) => {};\r\n  render() {\r\n    const layer: ILayer = {\r\n      labelWidth: 4,\r\n      inputWidth: 8,\r\n      labelOrientation: 'end',\r\n      inputOrientation: 'start'\r\n    };\r\n    const { intl, order_management_store } = this.props;\r\n    const {\r\n      listProducts,\r\n      listTypes,\r\n      isLoading,\r\n      listSelectFees,\r\n      listFillTypes,\r\n      listDetailsFees\r\n    } = order_management_store!;\r\n\r\n    return (\r\n      <AppThemeContext.Consumer>\r\n        {(themeContext: ITheme) =>\r\n          themeContext && (\r\n            <OrderConsumer>\r\n              {(orderContext: IOrderContext) =>\r\n                orderContext && (\r\n                  <div style={{ padding: 5, width: '100%' }}>\r\n                    <Row>\r\n                      <Col sm={6} lg={3}>\r\n                        <VCardPanel\r\n                          headerText={'Account Information'}\r\n                          headerTextJustify={'center'}\r\n                          height={'410px'}\r\n                          bodyPadding={'5px'}\r\n                          headerBackgroundColor={themeContext.headers}\r\n                          headerColor={'#FFFFFF'}\r\n                        >\r\n                          <VInputField\r\n                            id={'accountId'}\r\n                            label=\"Account ID:\"\r\n                            type=\"text\"\r\n                            inline\r\n                            className={isLoading ? Classes.SKELETON : ''}\r\n                            fill\r\n                            fieldState={this.form.$.accountId}\r\n                            layer={layer}\r\n                            disabled\r\n                          />\r\n                          <VInputField\r\n                            id={'name'}\r\n                            label=\"Name:\"\r\n                            inline\r\n                            className={isLoading ? Classes.SKELETON : ''}\r\n                            fill\r\n                            type=\"text\"\r\n                            fieldState={this.form.$.fsname}\r\n                            layer={layer}\r\n                            disabled\r\n                          />\r\n                          <VInputField\r\n                            id={'address'}\r\n                            label=\"Address:\"\r\n                            inline\r\n                            className={isLoading ? Classes.SKELETON : ''}\r\n                            type=\"text\"\r\n                            fill\r\n                            layer={layer}\r\n                            fieldState={this.form.$.fsaddress}\r\n                            disabled\r\n                          />\r\n                          <VInputField\r\n                            id={'city'}\r\n                            label=\"City:\"\r\n                            inline\r\n                            className={isLoading ? Classes.SKELETON : ''}\r\n                            fill\r\n                            type=\"text\"\r\n                            layer={layer}\r\n                            fieldState={this.form.$.fscity}\r\n                            disabled\r\n                          />\r\n                          <VInputField\r\n                            id={'state'}\r\n                            label=\"State/Prov:\"\r\n                            inline\r\n                            fill\r\n                            className={isLoading ? Classes.SKELETON : ''}\r\n                            layer={layer}\r\n                            type=\"text\"\r\n                            fieldState={this.form.$.fsStateProv}\r\n                            disabled\r\n                          />\r\n                          <VInputField\r\n                            id={'tank'}\r\n                            label=\"Tank Size:\"\r\n                            inline\r\n                            fill\r\n                            className={isLoading ? Classes.SKELETON : ''}\r\n                            layer={layer}\r\n                            type=\"text\"\r\n                            fieldState={this.form.$.tankSize}\r\n                            disabled\r\n                          />\r\n                          <div className={isLoading ? Classes.SKELETON : ''}>\r\n                            <VSelectField\r\n                              label={'Product:'}\r\n                              id={'products'}\r\n                              onChange={this.onSelectProduct}\r\n                              inline\r\n                              required\r\n                              validators={[required]}\r\n                              fieldState={this.form.$.productId}\r\n                              layer={layer}\r\n                              fill\r\n                              options={listProducts}\r\n                            />\r\n                          </div>\r\n                        </VCardPanel>\r\n                      </Col>\r\n                      <Col sm={6} lg={4}>\r\n                        <VCardPanel\r\n                          headerTextJustify={'center'}\r\n                          headerText={'Order Form'}\r\n                          bodyPadding={'5px'}\r\n                          headerBackgroundColor={themeContext.headers}\r\n                          headerColor={'#FFFFFF'}\r\n                        >\r\n                          <VInputField\r\n                            id={'orderId'}\r\n                            label=\"Order ID:\"\r\n                            inline\r\n                            disabled\r\n                            className={isLoading ? Classes.SKELETON : ''}\r\n                            type=\"text\"\r\n                            fill\r\n                            layer={layer}\r\n                            fieldState={this.form.$.id}\r\n                          />\r\n                          <VInputField\r\n                            id={'orderQty'}\r\n                            label=\"Order Qty:\"\r\n                            inline\r\n                            required\r\n                            className={isLoading ? Classes.SKELETON : ''}\r\n                            validators={[required]}\r\n                            fill\r\n                            layer={layer}\r\n                            type=\"text\"\r\n                            fieldState={this.form.$.ordQty}\r\n                          />\r\n                          <SVDate\r\n                            dateType={'DATE'}\r\n                            label={'Order Date'}\r\n                            id={'orderDate'}\r\n                            className={isLoading ? Classes.SKELETON : ''}\r\n                            validators={[required]}\r\n                            inline\r\n                            layer={layer}\r\n                            leftIcon={'calendar'}\r\n                            fieldState={this.form.$.ordDate}\r\n                          />\r\n                          <div className={isLoading ? Classes.SKELETON : ''}>\r\n                            <VSelectField\r\n                              label={'Order Type:'}\r\n                              id={'orderType'}\r\n                              required\r\n                              inline\r\n                              fieldState={this.form.$.orderTypeId}\r\n                              layer={layer}\r\n                              validators={[required]}\r\n                              fill\r\n                              options={listTypes}\r\n                            />\r\n                          </div>\r\n                          <div className={isLoading ? Classes.SKELETON : ''}>\r\n                            <VSelectField\r\n                              label={'Order Fill Type:'}\r\n                              id={'fillTypeId'}\r\n                              inline\r\n                              required\r\n                              fieldState={this.form.$.fillTypeId}\r\n                              layer={layer}\r\n                              fill\r\n                              options={listFillTypes}\r\n                            />\r\n                          </div>\r\n\r\n                          <VInputField\r\n                            id={'fixed'}\r\n                            label=\"Fixed Amt/Del:\"\r\n                            className={isLoading ? Classes.SKELETON : ''}\r\n                            inline\r\n                            fill\r\n                            layer={layer}\r\n                            type=\"text\"\r\n                            fieldState={this.form.$.fixed}\r\n                          />\r\n                          <VInputField\r\n                            id={'price'}\r\n                            label=\"Price:\"\r\n                            className={isLoading ? Classes.SKELETON : ''}\r\n                            inline\r\n                            fill\r\n                            layer={layer}\r\n                            type=\"text\"\r\n                            fieldState={this.form.$.price}\r\n                          />\r\n                          <VCheckboxField\r\n                            layer={{\r\n                              labelWidth: 4,\r\n                              inputWidth: 6,\r\n                              labelOrientation: 'end',\r\n                              inputOrientation: 'start'\r\n                            }}\r\n                            className={isLoading ? Classes.SKELETON : ''}\r\n                            fieldState={this.form.$.skipContracts}\r\n                            alignIndicator={'right'}\r\n                            id=\"skipContracts\"\r\n                            label=\"Skip Contract\"\r\n                            inline\r\n                          />\r\n                        </VCardPanel>\r\n                      </Col>\r\n                      <Col sm={12} lg={5}>\r\n                        <Row>\r\n                          <Col lg={12} sm={6} style={{ marginBottom: 18 }}>\r\n                            <VCardPanel\r\n                              headerText={'Description'}\r\n                              bodyPadding={'5px 5px 5px 5px'}\r\n                              headerTextJustify={'center'}\r\n                              headerBackgroundColor={themeContext.headers}\r\n                              headerColor={'#FFFFFF'}\r\n                            >\r\n                              <VTextAreaField\r\n                                fill\r\n                                layer={{\r\n                                  labelWidth: 4,\r\n                                  inputWidth: 8,\r\n                                  labelOrientation: 'center',\r\n                                  inputOrientation: 'start'\r\n                                }}\r\n                                id=\"remarks\"\r\n                                label=\"Order Description\"\r\n                                inline\r\n                                className={isLoading ? Classes.SKELETON : ''}\r\n                                fieldState={this.form.$.remarks}\r\n                              />\r\n                            </VCardPanel>\r\n                          </Col>\r\n                          <Col lg={12} sm={6}>\r\n                            <FOrderFeeContext.Provider\r\n                              value={{\r\n                                isLoading,\r\n                                onSelectFee: this.onAddFee,\r\n                                listFees: listSelectFees,\r\n                                onDelFee: this.onRemoveFee,\r\n                                dataFee: listDetailsFees\r\n                              }}\r\n                            >\r\n                              <OrderDetailsFees />\r\n                            </FOrderFeeContext.Provider>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                    <Divider />\r\n                    <Row end={'xs'} style={{ padding: 5 }}>\r\n                      <Col xs>\r\n                        <Button\r\n                          minimal\r\n                          intent={'none'}\r\n                          icon={'tick'}\r\n                          onClick={() => {\r\n                            this.onSubmit(orderContext.onSaveOrders);\r\n                          }}\r\n                          disabled={isLoading || this.props.disableSave}\r\n                          text={intl.formatMessage({\r\n                            id: 'setup.location.operator.filter.apply',\r\n                            defaultMessage: 'Save order'\r\n                          })}\r\n                        />\r\n                        <Button\r\n                          minimal\r\n                          intent={'none'}\r\n                          icon={'disable'}\r\n                          onClick={this.props.onCancel}\r\n                          text={intl.formatMessage({\r\n                            id: 'setup.location.operator.form.cancel',\r\n                            defaultMessage: 'Cancel'\r\n                          })}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                )\r\n              }\r\n            </OrderConsumer>\r\n          )\r\n        }\r\n      </AppThemeContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(OrderDetailsComponent);\r\n","import React, { Component } from 'react';\r\nimport { VTable } from 'gsi-vx-ui';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { IOrderContext, OrderContext } from '../../../containers/OrderManagementContainer';\r\nimport { upperCase } from 'lodash';\r\nimport PageComponent from '../../../../../../commons/components/Paginator/PagePaginatorComponent';\r\n\r\nconst OrderConsumer = OrderContext.Consumer;\r\n\r\ninterface IListOpenOrders extends InjectedIntlProps {\r\n  orders: any[];\r\n  columns: string[];\r\n  totalOrder: number;\r\n  page: number;\r\n  pageSize: number;\r\n  renderCustomerType: any;\r\n  onSelect: (data: any) => void;\r\n  onPageChange: (data: any) => void;\r\n}\r\n\r\nclass ListOpenOrdersComponent extends Component<IListOpenOrders> {\r\n  constructor(props: IListOpenOrders) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <OrderConsumer>\r\n        {(orderContext: IOrderContext) =>\r\n          orderContext && (\r\n            <VTable\r\n              columns={this.props.columns}\r\n              typeHeightRow={'HALF'}\r\n              striped\r\n              enableColumnResizing={true}\r\n              cellSelectionType={'ENTIRE_ROW'}\r\n              actionsSelection={{ onSelectionChange: this.onSelectRow }}\r\n              widgetsCell={orderContext.renderCustom(this.props.columns)}\r\n              columns_name={{\r\n                orderId: this.props.intl.formatMessage({ id: 'delivery.order.review.cmTickNo' }),\r\n                accountId: this.props.intl.formatMessage({ id: 'delivery.order.review.cmAccId' }),\r\n                lastDate: this.props.intl.formatMessage({ id: 'delivery.order.review.cmLastDate' }),\r\n                orderDate: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.order_date' })),\r\n                geo: this.props.intl.formatMessage({ id: 'delivery.order.open.cmGeo' }),\r\n                type: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.order_type' })),\r\n                name: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.name' })),\r\n                qty: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.order_qty' }))\r\n              }}\r\n              data={this.props.orders}\r\n              footer={\r\n                <PageComponent\r\n                  currentPage={this.props.page}\r\n                  onPageChanged={this.props.onPageChange}\r\n                  pageLimit={this.props.pageSize}\r\n                  totalRecords={this.props.totalOrder}\r\n                />\r\n              }\r\n            />\r\n          )\r\n        }\r\n      </OrderConsumer>\r\n    );\r\n  }\r\n\r\n  onSelectRow = (data: any) => {\r\n    this.props.onSelect(data);\r\n  };\r\n}\r\n\r\nexport default injectIntl(ListOpenOrdersComponent);\r\n","import React, { Component } from 'react';\r\nimport { OpenOrdersStore } from '../../../stores/OpenOrdersStore';\r\nimport { VCardPanel, VSpinner } from 'gsi-vx-ui';\r\nimport OrderDetailsComponent from '../order_details/OrderDetailsComponent';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { disposeOnUnmount, inject, observer } from 'mobx-react';\r\nimport { AppThemeContext } from '../../../../../../../App';\r\nimport ListOpenOrdersComponent from '../open/ListOpenOrdersComponent';\r\nimport CustomComponent from '../../../commons/CustomComponent';\r\nimport { Dialog } from '@blueprintjs/core';\r\nimport { reaction } from 'mobx';\r\nimport { IOrderContext, OrderContext } from '../../../containers/OrderManagementContainer';\r\nimport { ITheme } from '../../../../../../../core/stores/AppStore';\r\n\r\nconst OrderConsumer = OrderContext.Consumer;\r\n\r\ninterface IOpenOrdersComponent extends InjectedIntlProps {\r\n  open_orders_store?: OpenOrdersStore;\r\n  days: number | string;\r\n  filter: boolean;\r\n}\r\n\r\n@inject('open_orders_store')\r\n@observer\r\nclass OpenOrdersComponent extends Component<IOpenOrdersComponent> {\r\n  constructor(props: IOpenOrdersComponent) {\r\n    super(props);\r\n    this.onChangeFilter();\r\n    this.onChangeDays();\r\n    disposeOnUnmount(this, [\r\n      reaction(\r\n        () => this.props.filter,\r\n        () => {\r\n          this.onChangeFilter();\r\n        }\r\n      ),\r\n      reaction(\r\n        () => this.props.days,\r\n        () => {\r\n          this.onChangeDays();\r\n        }\r\n      )\r\n    ]);\r\n  }\r\n  handleOpenDetails() {\r\n    this.props.open_orders_store!.setOpenDetails(true);\r\n  }\r\n  onSelectOpen(data: any) {\r\n    this.props.open_orders_store!.setElement(data);\r\n  }\r\n  onChangeDays = () => {\r\n    this.props.days\r\n      ? this.props.open_orders_store!.addFilter({\r\n          value: this.props.days,\r\n          field: 'numberDate',\r\n          operator: 'EQUALITY'\r\n        })\r\n      : this.props.open_orders_store!.removeFilter({\r\n          value: '',\r\n          field: 'numberDate',\r\n          operator: 'EQUALITY'\r\n        });\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.open_orders_store!.resetElement();\r\n    this.props.open_orders_store!.setOpenDetails(false);\r\n    this.props.open_orders_store!.setCmpMount(false);\r\n  }\r\n  handleSaveDetails() {\r\n    const { open_orders_store } = this.props;\r\n    open_orders_store!.setOpenDetails(false);\r\n    open_orders_store!.getElements();\r\n  }\r\n  onChangeFilter = () => {\r\n    this.props.filter && this.props.open_orders_store!.updateFilterType();\r\n    this.props.open_orders_store!.setFilterByUrgency(this.props.filter);\r\n  };\r\n  onPageChange(data: any) {\r\n    if (\r\n      data.paginationData.currentPage !== this.props.open_orders_store!.page ||\r\n      data.pageLimit !== this.props.open_orders_store!.size\r\n    ) {\r\n      this.props.open_orders_store!.setSize(data.pageLimit);\r\n      data.paginationData.currentPage > 0 && this.props.open_orders_store!.setPage(data.paginationData.currentPage);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.props.open_orders_store!.setCmpMount(true);\r\n  }\r\n  handleCloseDetails() {\r\n    this.props.open_orders_store!.setOpenDetails(false);\r\n  }\r\n  render() {\r\n    const { isLoading, isDetailsOpen, elements, count, element, size, page } = this.props.open_orders_store!;\r\n    return (\r\n      <AppThemeContext.Consumer>\r\n        {(themeContext: ITheme) =>\r\n          themeContext && (\r\n            <OrderConsumer>\r\n              {(orderContext: IOrderContext) =>\r\n                orderContext && (\r\n                  <VCardPanel\r\n                    headerText={`${this.props.intl.formatMessage({\r\n                      id: 'delivery.order.open.title_list_open'\r\n                    })} (${count} of ${orderContext.totalOrders})`}\r\n                    bodyPadding={'1px'}\r\n                    headerBackgroundColor={themeContext.headers}\r\n                    headerColor={'#FFFFFF'}\r\n                    headerTextJustify={'center'}\r\n                  >\r\n                    {isLoading ? (\r\n                      <VSpinner />\r\n                    ) : (\r\n                      <ListOpenOrdersComponent\r\n                        orders={elements}\r\n                        pageSize={size}\r\n                        totalOrder={count}\r\n                        page={page}\r\n                        onPageChange={this.onPageChange.bind(this)}\r\n                        columns={['type', 'geo', 'orderId', 'accountId', 'name', 'lastDate', 'orderDate', 'qty']}\r\n                        renderCustomerType={orderContext.renderCustomerType}\r\n                        onSelect={this.onSelectOpen.bind(this)}\r\n                      />\r\n                    )}\r\n                    {isDetailsOpen && (\r\n                      <Dialog\r\n                        isOpen={isDetailsOpen}\r\n                        canOutsideClickClose={false}\r\n                        onClose={this.handleCloseDetails.bind(this)}\r\n                        style={{ width: '85%', paddingBottom: '0' }}\r\n                        canEscapeKeyClose={false}\r\n                      >\r\n                        <VCardPanel\r\n                          headerText={this.props.intl.formatMessage({ id: 'delivery.order.open.titleDetails' })}\r\n                          bodyPadding={'1px'}\r\n                          headerBackgroundColor={themeContext.headers}\r\n                          headerColor={'#FFFFFF'}\r\n                          headerTextJustify={'center'}\r\n                          headerCustomComponent={<CustomComponent action={this.handleCloseDetails.bind(this)} />}\r\n                        >\r\n                          <OrderDetailsComponent\r\n                            orderDetails={element}\r\n                            onSave={this.handleSaveDetails.bind(this)}\r\n                            onCancel={this.handleCloseDetails.bind(this)}\r\n                            nofees={0}\r\n                          />\r\n                        </VCardPanel>\r\n                      </Dialog>\r\n                    )}\r\n                  </VCardPanel>\r\n                )\r\n              }\r\n            </OrderConsumer>\r\n          )\r\n        }\r\n      </AppThemeContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(OpenOrdersComponent);\r\n","import React from 'react';\r\nimport { VTable } from 'gsi-vx-ui';\r\nimport { IListTable } from '../../../type/OrderManagementType';\r\nimport { IOrderContext, OrderContext } from '../../../containers/OrderManagementContainer';\r\nimport PageComponent from '../../../../../../commons/components/Paginator/PagePaginatorComponent';\r\nimport { injectIntl } from 'react-intl';\r\nimport { upperCase } from 'lodash';\r\n\r\nconst OrderConsumer = OrderContext.Consumer;\r\n\r\nconst ListIncompleteComponent = (props: IListTable) => {\r\n  const { orders, onRowClick } = props;\r\n  return (\r\n    <OrderConsumer>\r\n      {(orderContext: IOrderContext) =>\r\n        orderContext && (\r\n          <VTable\r\n            cellSelectionType={'ENTIRE_ROW'}\r\n            striped\r\n            actionsSelection={{ onSelectionChange: onRowClick }}\r\n            columns={props.columns}\r\n            widgetsCell={orderContext.renderCustom(props.columns)}\r\n            typeHeightRow={'HALF'}\r\n            enableColumnResizing={true}\r\n            columns_name={{\r\n              orderId: props.intl.formatMessage({ id: 'delivery.order.review.cmOrdId' }),\r\n              accountId: props.intl.formatMessage({ id: 'delivery.order.review.cmAccId' }),\r\n              lastDate: props.intl.formatMessage({ id: 'delivery.order.review.cmLastDate' }),\r\n              name: upperCase(props.intl.formatMessage({ id: 'delivery.order.open.name' })),\r\n              error: props.intl.formatMessage({ id: 'delivery.order.open.cmError' }),\r\n              type: upperCase(props.intl.formatMessage({ id: 'delivery.order.open.order_type' })),\r\n              orderDate: upperCase(props.intl.formatMessage({ id: 'delivery.order.open.order_date' })),\r\n              qty: upperCase(props.intl.formatMessage({ id: 'delivery.order.open.order_qty' }))\r\n            }}\r\n            data={orders}\r\n            footer={\r\n              <PageComponent\r\n                currentPage={props.page}\r\n                onPageChanged={props.onPageChange}\r\n                pageLimit={props.pageSize}\r\n                totalRecords={props.totalOrder}\r\n              />\r\n            }\r\n          />\r\n        )\r\n      }\r\n    </OrderConsumer>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ListIncompleteComponent);\r\n","import React, { Component } from 'react';\r\nimport { disposeOnUnmount, inject, observer } from 'mobx-react';\r\nimport { VCardPanel, VSpinner } from 'gsi-vx-ui';\r\nimport { Dialog } from '@blueprintjs/core';\r\nimport ListIncompleteComponent from './ListIncompleteComponent';\r\nimport { IncompleteStore } from '../../../stores/IncompleteStore';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport OrderDetailsComponent from '../order_details/OrderDetailsComponent';\r\nimport CustomComponent from '../../../commons/CustomComponent';\r\nimport { AppThemeContext } from '../../../../../../../App';\r\nimport { IOrderContext, OrderContext } from '../../../containers/OrderManagementContainer';\r\nimport { reaction } from 'mobx';\r\nimport { ITheme } from '../../../../../../../core/stores/AppStore';\r\n\r\nconst OrderConsumer = OrderContext.Consumer;\r\n\r\ninterface IIncompleteComponent extends InjectedIntlProps {\r\n  incomplete_orders_store?: IncompleteStore;\r\n  days: number | string;\r\n  filter: boolean;\r\n}\r\n\r\n@inject('incomplete_orders_store')\r\n@observer\r\nclass IncompleteComponent extends Component<IIncompleteComponent> {\r\n  constructor(props: IIncompleteComponent) {\r\n    super(props);\r\n    this.onChangeFilter();\r\n    this.onChangeDays();\r\n    disposeOnUnmount(this, [\r\n      reaction(\r\n        () => this.props.filter,\r\n        () => {\r\n          this.onChangeFilter();\r\n        }\r\n      ),\r\n      reaction(\r\n        () => this.props.days,\r\n        () => {\r\n          this.onChangeDays();\r\n        }\r\n      )\r\n    ]);\r\n  }\r\n  onChangeDays = () => {\r\n    this.props.days\r\n      ? this.props.incomplete_orders_store!.addFilter({\r\n          value: this.props.days,\r\n          field: 'numberDate',\r\n          operator: 'EQUALITY'\r\n        })\r\n      : this.props.incomplete_orders_store!.removeFilter({\r\n          value: '',\r\n          field: 'numberDate',\r\n          operator: 'EQUALITY'\r\n        });\r\n  };\r\n  onSelectOrder = (data: any) => {\r\n    data ? this.props.incomplete_orders_store!.setElement(data) : this.props.incomplete_orders_store!.resetElement();\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.incomplete_orders_store!.resetElement();\r\n    this.props.incomplete_orders_store!.setOpenDetails(false);\r\n    this.props.incomplete_orders_store!.setCmpMount(false);\r\n  }\r\n  componentDidMount() {\r\n    this.props.incomplete_orders_store!.setCmpMount(true);\r\n  }\r\n  handleSaveDetails = () => {\r\n    const { incomplete_orders_store } = this.props;\r\n    incomplete_orders_store!.setOpenDetails(false);\r\n    incomplete_orders_store!.getElements();\r\n  };\r\n  onChangeFilter = () => {\r\n    this.props.filter && this.props.incomplete_orders_store!.updateFilterType();\r\n    this.props.incomplete_orders_store!.setFilterBySummary(this.props.filter);\r\n  };\r\n  onPageChange(data: any) {\r\n    if (\r\n      data.paginationData.currentPage !== this.props.incomplete_orders_store!.page ||\r\n      data.pageLimit !== this.props.incomplete_orders_store!.size\r\n    ) {\r\n      this.props.incomplete_orders_store!.setSize(data.pageLimit);\r\n      data.paginationData.currentPage > 0 &&\r\n        this.props.incomplete_orders_store!.setPage(data.paginationData.currentPage);\r\n    }\r\n  }\r\n  render() {\r\n    const { incomplete_orders_store } = this.props;\r\n    const { elements, count, isLoading, element, openDetails, size, page } = incomplete_orders_store!;\r\n    return (\r\n      <div style={{ margin: 5 }}>\r\n        <AppThemeContext.Consumer>\r\n          {(themeContext: ITheme) =>\r\n            themeContext && (\r\n              <OrderConsumer>\r\n                {(orderContext: IOrderContext) =>\r\n                  orderContext && (\r\n                    <VCardPanel\r\n                      headerText={`Incomplete Orders (${count} of ${orderContext.totalOrders})`}\r\n                      bodyPadding={'1px'}\r\n                      headerTextJustify={'center'}\r\n                      headerBackgroundColor={themeContext.headers}\r\n                      headerColor={'#FFFFFF'}\r\n                    >\r\n                      {isLoading ? (\r\n                        <VSpinner />\r\n                      ) : (\r\n                        <ListIncompleteComponent\r\n                          orders={elements}\r\n                          pageSize={size}\r\n                          totalOrder={count}\r\n                          page={page}\r\n                          onPageChange={this.onPageChange.bind(this)}\r\n                          columns={['orderId', 'type', 'error', 'accountId', 'name', 'lastDate', 'orderDate', 'qty']}\r\n                          onRowClick={this.onSelectOrder}\r\n                          renderCustomerType={orderContext.renderCustomerType}\r\n                        />\r\n                      )}\r\n                    </VCardPanel>\r\n                  )\r\n                }\r\n              </OrderConsumer>\r\n            )\r\n          }\r\n        </AppThemeContext.Consumer>\r\n        {openDetails && (\r\n          <Dialog\r\n            isOpen={true}\r\n            canOutsideClickClose={false}\r\n            onClose={() => incomplete_orders_store!.setOpenDetails(false)}\r\n            style={{ width: '85%', paddingBottom: '0' }}\r\n            canEscapeKeyClose={false}\r\n          >\r\n            <AppThemeContext.Consumer>\r\n              {(themeContext: ITheme) =>\r\n                themeContext && (\r\n                  <VCardPanel\r\n                    headerText={this.props.intl.formatMessage({ id: 'delivery.order.open.titleDetails' })}\r\n                    bodyPadding={'1px'}\r\n                    headerBackgroundColor={themeContext.headers}\r\n                    headerColor={'#FFFFFF'}\r\n                    headerTextJustify={'center'}\r\n                    headerCustomComponent={\r\n                      <CustomComponent action={() => incomplete_orders_store!.setOpenDetails(false)} />\r\n                    }\r\n                  >\r\n                    <OrderDetailsComponent\r\n                      orderDetails={element}\r\n                      onSave={this.handleSaveDetails}\r\n                      onCancel={() => incomplete_orders_store!.setOpenDetails(false)}\r\n                      nofees={0}\r\n                    />\r\n                  </VCardPanel>\r\n                )\r\n              }\r\n            </AppThemeContext.Consumer>\r\n          </Dialog>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(IncompleteComponent);\r\n","import React, { Component } from 'react';\r\nimport { VTable } from 'gsi-vx-ui';\r\nimport { IListTable } from '../../../type/OrderManagementType';\r\nimport { IOrderContext, OrderContext } from '../../../containers/OrderManagementContainer';\r\nimport PageComponent from '../../../../../../commons/components/Paginator/PagePaginatorComponent';\r\nimport { injectIntl } from 'react-intl';\r\nimport { upperCase } from 'lodash';\r\n\r\nconst OrderConsumer = OrderContext.Consumer;\r\n\r\nclass ListDuplicateComponent extends Component<IListTable> {\r\n  constructor(props: IListTable) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    const { orders, onRowClick } = this.props;\r\n    return (\r\n      <OrderConsumer>\r\n        {(orderContext: IOrderContext) =>\r\n          orderContext && (\r\n            <VTable\r\n              cellSelectionType={'ENTIRE_ROW'}\r\n              striped\r\n              columns={this.props.columns}\r\n              enableColumnResizing={true}\r\n              actionsSelection={{ onSelectionChange: onRowClick }}\r\n              typeHeightRow={'HALF'}\r\n              columnWidths={[120, 120, 120, 125]}\r\n              widgetsCell={orderContext.renderCustom(this.props.columns)}\r\n              columns_name={{\r\n                accountId: this.props.intl.formatMessage({ id: 'delivery.order.review.cmAccId' }),\r\n                orderId: this.props.intl.formatMessage({ id: 'delivery.order.review.cmOrdId' }),\r\n                orderStatus: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.order_status' })),\r\n                colortype: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.order_type' })),\r\n                orderDate: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.order_date' })),\r\n                customerName: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.name' })),\r\n                productName: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.product' })),\r\n                qty: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.order_qty' })),\r\n                lastDate: this.props.intl.formatMessage({ id: 'delivery.order.review.cmLastDate' }),\r\n                lastDelQty: this.props.intl.formatMessage({ id: 'delivery.order.review.cmLastQty' }),\r\n                lastDelDriver: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.review.cmLastDriver' }))\r\n              }}\r\n              data={orders}\r\n              footer={\r\n                <PageComponent\r\n                  currentPage={this.props.page}\r\n                  onPageChanged={this.props.onPageChange}\r\n                  pageLimit={this.props.pageSize}\r\n                  totalRecords={this.props.totalOrder}\r\n                />\r\n              }\r\n            />\r\n          )\r\n        }\r\n      </OrderConsumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(ListDuplicateComponent);\r\n","import React, { Component } from 'react';\r\nimport { disposeOnUnmount, inject, observer } from 'mobx-react';\r\nimport { Dialog } from '@blueprintjs/core';\r\nimport { VCardPanel, VSpinner } from 'gsi-vx-ui';\r\nimport ListDuplicateComponent from './ListDuplicateComponent';\r\nimport { observable, reaction } from 'mobx';\r\nimport { DuplicateOrdersStore } from '../../../stores/DuplicateOrdersStore';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport CustomComponent from '../../../commons/CustomComponent';\r\nimport { AppThemeContext } from '../../../../../../../App';\r\nimport OrderDetailsComponent from '../order_details/OrderDetailsComponent';\r\nimport { IOrderContext, OrderContext } from '../../../containers/OrderManagementContainer';\r\nimport { ITheme } from '../../../../../../../core/stores/AppStore';\r\n\r\nconst OrderConsumer = OrderContext.Consumer;\r\n\r\ninterface IDuplicatesComponent extends InjectedIntlProps {\r\n  filter: boolean;\r\n  days: number | string;\r\n  duplicate_orders_store?: DuplicateOrdersStore;\r\n}\r\n\r\n@inject('duplicate_orders_store')\r\n@observer\r\nclass DuplicatesComponent extends Component<IDuplicatesComponent> {\r\n  @observable\r\n  activeDrop: boolean;\r\n\r\n  constructor(props: IDuplicatesComponent) {\r\n    super(props);\r\n\r\n    // todo fix router inject (yoendy)\r\n    this.activeDrop = false;\r\n    // if (this.props.router!.search.hasOwnProperty('drop')) {\r\n    //   this.activeDrop = this.props.router!.search.drop === 'duplicate';\r\n    // } else {\r\n    //   this.activeDrop = false;\r\n    // }\r\n    this.onChangeFilter();\r\n    this.onChangeDays();\r\n    disposeOnUnmount(this, [\r\n      reaction(\r\n        () => this.props.filter,\r\n        () => {\r\n          this.onChangeFilter();\r\n        }\r\n      ),\r\n      reaction(\r\n        () => this.props.days,\r\n        () => {\r\n          this.onChangeDays();\r\n        }\r\n      )\r\n    ]);\r\n  }\r\n  onChangeDays = () => {\r\n    this.props.days\r\n      ? this.props.duplicate_orders_store!.addFilter({\r\n          value: this.props.days,\r\n          field: 'numberDate',\r\n          operator: 'EQUALITY'\r\n        })\r\n      : this.props.duplicate_orders_store!.removeFilter({\r\n          value: '',\r\n          field: 'numberDate',\r\n          operator: 'EQUALITY'\r\n        });\r\n  };\r\n  onSelectOrder = (data: any) => {\r\n    const { duplicate_orders_store } = this.props;\r\n    duplicate_orders_store!.setElement(data);\r\n  };\r\n  loadOrders = () => {\r\n    this.props.duplicate_orders_store!.getElements();\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.duplicate_orders_store!.resetElement();\r\n    this.props.duplicate_orders_store!.setOpenDetails(false);\r\n    this.props.duplicate_orders_store!.setCmpMount(false);\r\n  }\r\n  onPageChange(data: any) {\r\n    if (\r\n      data.paginationData.currentPage !== this.props.duplicate_orders_store!.page ||\r\n      data.pageLimit !== this.props.duplicate_orders_store!.size\r\n    ) {\r\n      this.props.duplicate_orders_store!.setSize(data.pageLimit);\r\n      data.paginationData.currentPage > 0 &&\r\n        this.props.duplicate_orders_store!.setPage(data.paginationData.currentPage);\r\n    }\r\n  }\r\n  handleSaveDetails = () => {\r\n    const { duplicate_orders_store } = this.props;\r\n    duplicate_orders_store!.setOpenDetails(false);\r\n    duplicate_orders_store!.getElements();\r\n  };\r\n  componentDidMount() {\r\n    this.props.duplicate_orders_store!.setCmpMount(true);\r\n  }\r\n  onChangeFilter = () => {\r\n    this.props.filter && this.props.duplicate_orders_store!.updateFilterType();\r\n    this.props.duplicate_orders_store!.setFilterBySummary(this.props.filter);\r\n  };\r\n  render() {\r\n    const { duplicate_orders_store } = this.props;\r\n    const { elements, count, isLoading, openDetails, size, page } = duplicate_orders_store!;\r\n    return (\r\n      <AppThemeContext.Consumer>\r\n        {(themeContext: ITheme) =>\r\n          themeContext && (\r\n            <OrderConsumer>\r\n              {(orderContext: IOrderContext) =>\r\n                orderContext && (\r\n                  <React.Fragment>\r\n                    <VCardPanel\r\n                      headerText={`Duplicate Orders: (${count} of ${orderContext.totalOrders})`}\r\n                      bodyPadding={'1px'}\r\n                      headerTextJustify={'center'}\r\n                      headerBackgroundColor={themeContext.headers}\r\n                      headerColor={'#FFFFFF'}\r\n                      defaultActive={this.activeDrop}\r\n                    >\r\n                      {isLoading ? (\r\n                        <VSpinner />\r\n                      ) : (\r\n                        <ListDuplicateComponent\r\n                          columns={[\r\n                            'accountId',\r\n                            'name',\r\n                            'orderId',\r\n                            'orderStatus',\r\n                            'type',\r\n                            'productName',\r\n                            'orderDate',\r\n                            'qty',\r\n                            'lastDate',\r\n                            'lastDelQty',\r\n                            'lastDelDriver'\r\n                          ]}\r\n                          pageSize={size}\r\n                          totalOrder={count}\r\n                          page={page}\r\n                          onPageChange={this.onPageChange.bind(this)}\r\n                          renderCustomerType={orderContext.renderCustomerType}\r\n                          orders={elements}\r\n                          onRowClick={this.onSelectOrder}\r\n                        />\r\n                      )}\r\n                    </VCardPanel>\r\n                    {openDetails && (\r\n                      <Dialog\r\n                        isOpen={true}\r\n                        canOutsideClickClose={false}\r\n                        onClose={() => duplicate_orders_store!.setOpenDetails(false)}\r\n                        style={{ width: '85%', paddingBottom: '0' }}\r\n                        canEscapeKeyClose={false}\r\n                      >\r\n                        <VCardPanel\r\n                          headerText={this.props.intl.formatMessage({ id: 'delivery.order.open.titleDetails' })}\r\n                          bodyPadding={'1px'}\r\n                          headerBackgroundColor={themeContext.headers}\r\n                          headerColor={'#FFFFFF'}\r\n                          headerTextJustify={'center'}\r\n                          headerCustomComponent={\r\n                            <CustomComponent action={() => duplicate_orders_store!.setOpenDetails(false)} />\r\n                          }\r\n                        >\r\n                          <OrderDetailsComponent\r\n                            orderDetails={duplicate_orders_store!.element}\r\n                            onSave={this.handleSaveDetails}\r\n                            onCancel={() => duplicate_orders_store!.setOpenDetails(false)}\r\n                            nofees={0}\r\n                          />\r\n                        </VCardPanel>\r\n                      </Dialog>\r\n                    )}\r\n                  </React.Fragment>\r\n                )\r\n              }\r\n            </OrderConsumer>\r\n          )\r\n        }\r\n      </AppThemeContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(DuplicatesComponent);\r\n","import React, { Component } from 'react';\r\nimport { VCardPanel, VSpinner, VTable } from 'gsi-vx-ui';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { AppThemeContext } from '../../../../../../../App';\r\nimport { IOrderContext, OrderContext } from '../../../containers/OrderManagementContainer';\r\nimport PageComponent from '../../../../../../commons/components/Paginator/PagePaginatorComponent';\r\nimport { upperCase } from 'lodash';\r\nimport { ITheme } from '../../../../../../../core/stores/AppStore';\r\n\r\nconst OrderConsumer = OrderContext.Consumer;\r\n\r\ninterface IListUnGeoOrders extends InjectedIntlProps {\r\n  noungeoorders: number;\r\n  noorders: number;\r\n  orders: any[];\r\n  columns: string[];\r\n  isLoading: boolean;\r\n  totalOrder: number;\r\n  page: number;\r\n  pageSize: number;\r\n  onPageChange: (data: any) => void;\r\n  onSelect: (data: any) => void;\r\n}\r\n\r\nclass ListOpenOrdersComponent extends Component<IListUnGeoOrders> {\r\n  constructor(props: IListUnGeoOrders) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    const { noungeoorders, noorders, orders, isLoading, intl } = this.props;\r\n    return (\r\n      <AppThemeContext.Consumer>\r\n        {(themeContext: ITheme) =>\r\n          themeContext && (\r\n            <VCardPanel\r\n              headerText={`${intl.formatMessage({\r\n                id: 'delivery.order.open.title_list_ungeo'\r\n              })} (${noungeoorders} of ${noorders})`}\r\n              bodyPadding={'1px'}\r\n              headerBackgroundColor={themeContext.headers}\r\n              headerColor={'#FFFFFF'}\r\n              headerTextJustify={'center'}\r\n            >\r\n              {isLoading ? (\r\n                <VSpinner />\r\n              ) : (\r\n                <OrderConsumer>\r\n                  {(orderContext: IOrderContext) =>\r\n                    orderContext && (\r\n                      <VTable\r\n                        columns={this.props.columns}\r\n                        typeHeightRow={'HALF'}\r\n                        striped\r\n                        enableColumnResizing={true}\r\n                        cellSelectionType={'ENTIRE_ROW'}\r\n                        actionsSelection={{ onSelectionChange: this.onSelectRow }}\r\n                        widgetsCell={orderContext.renderCustom(this.props.columns)}\r\n                        columns_name={{\r\n                          orderId: this.props.intl.formatMessage({ id: 'delivery.order.review.cmTickNo' }),\r\n                          accountId: this.props.intl.formatMessage({ id: 'delivery.order.review.cmAccId' }),\r\n                          lastDate: this.props.intl.formatMessage({ id: 'delivery.order.review.cmLastDate' }),\r\n                          orderDate: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.order_date' })),\r\n                          geo: this.props.intl.formatMessage({ id: 'delivery.order.open.cmGeo' }),\r\n                          type: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.order_type' })),\r\n                          name: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.name' })),\r\n                          qty: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.order_qty' }))\r\n                        }}\r\n                        footer={\r\n                          <PageComponent\r\n                            currentPage={this.props.page}\r\n                            onPageChanged={this.props.onPageChange}\r\n                            pageLimit={this.props.pageSize}\r\n                            totalRecords={this.props.totalOrder}\r\n                          />\r\n                        }\r\n                        data={orders}\r\n                      />\r\n                    )\r\n                  }\r\n                </OrderConsumer>\r\n              )}\r\n            </VCardPanel>\r\n          )\r\n        }\r\n      </AppThemeContext.Consumer>\r\n    );\r\n  }\r\n\r\n  onSelectRow = (data: any) => {\r\n    this.props.onSelect(data);\r\n  };\r\n}\r\n\r\nexport default injectIntl(ListOpenOrdersComponent);\r\n","import React, { Component } from 'react';\r\nimport { disposeOnUnmount, inject, observer } from 'mobx-react';\r\nimport { VCardPanel } from 'gsi-vx-ui';\r\nimport { Dialog } from '@blueprintjs/core';\r\nimport ListUngeoOrders from './ListUngeoOrders';\r\nimport { UnGeoStore } from '../../../stores/UnGeoStore';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport OrderDetailsComponent from '../order_details/OrderDetailsComponent';\r\nimport CustomComponent from '../../../commons/CustomComponent';\r\nimport { IOrderContext, OrderContext } from '../../../containers/OrderManagementContainer';\r\nimport { AppThemeContext } from '../../../../../../../App';\r\nimport { reaction } from 'mobx';\r\nimport { ITheme } from '../../../../../../../core/stores/AppStore';\r\n\r\nconst OrderConsumer = OrderContext.Consumer;\r\n\r\ninterface IUnGeoOrdersComponent extends InjectedIntlProps {\r\n  ungeo_store?: UnGeoStore;\r\n  days: number | string;\r\n  filter: boolean;\r\n}\r\n\r\n@inject('ungeo_store')\r\n@observer\r\nclass UnGeoOrdersComponent extends Component<IUnGeoOrdersComponent> {\r\n  constructor(props: IUnGeoOrdersComponent) {\r\n    super(props);\r\n    this.onChangeFilter();\r\n    this.onChangeDays();\r\n    disposeOnUnmount(this, [\r\n      reaction(\r\n        () => this.props.filter,\r\n        () => {\r\n          this.onChangeFilter();\r\n        }\r\n      ),\r\n      reaction(\r\n        () => this.props.days,\r\n        () => {\r\n          this.onChangeDays();\r\n        }\r\n      )\r\n    ]);\r\n  }\r\n  onSelectOrder = (data: any) => {\r\n    if (data) {\r\n      this.props.ungeo_store!.setElement(data);\r\n    } else {\r\n      this.props.ungeo_store!.resetElement();\r\n    }\r\n  };\r\n  onChangeDays = () => {\r\n    this.props.days\r\n      ? this.props.ungeo_store!.addFilter({\r\n          value: this.props.days,\r\n          field: 'numberDate',\r\n          operator: 'EQUALITY'\r\n        })\r\n      : this.props.ungeo_store!.removeFilter({\r\n          value: '',\r\n          field: 'numberDate',\r\n          operator: 'EQUALITY'\r\n        });\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.ungeo_store!.resetElement();\r\n    this.props.ungeo_store!.setOpenDetails(false);\r\n    this.props.ungeo_store!.setCmpMount(false);\r\n  }\r\n  handleSaveDetails = () => {\r\n    const { ungeo_store } = this.props;\r\n    ungeo_store!.setOpenDetails(false);\r\n    ungeo_store!.getElements();\r\n  };\r\n  componentDidMount() {\r\n    this.props.ungeo_store!.setCmpMount(true);\r\n  }\r\n  onChangeFilter = () => {\r\n    this.props.filter && this.props.ungeo_store!.updateFilterType();\r\n    this.props.ungeo_store!.setFilterBySummary(this.props.filter);\r\n  };\r\n  onPageChange(data: any) {\r\n    if (\r\n      data.paginationData.currentPage !== this.props.ungeo_store!.page ||\r\n      data.pageLimit !== this.props.ungeo_store!.size\r\n    ) {\r\n      this.props.ungeo_store!.setSize(data.pageLimit);\r\n      data.paginationData.currentPage > 0 && this.props.ungeo_store!.setPage(data.paginationData.currentPage);\r\n    }\r\n  }\r\n  render() {\r\n    const { ungeo_store } = this.props;\r\n    const { elements, count, isLoading, openDetails, size, page } = ungeo_store!;\r\n    return (\r\n      <AppThemeContext.Consumer>\r\n        {(themeContext: ITheme) =>\r\n          themeContext && (\r\n            <div style={{ margin: 5 }}>\r\n              <OrderConsumer>\r\n                {(orderContext: IOrderContext) =>\r\n                  orderContext && (\r\n                    <ListUngeoOrders\r\n                      columns={['type', 'geo', 'orderId', 'accountId', 'name', 'lastDate', 'orderDate', 'qty']}\r\n                      orders={elements}\r\n                      pageSize={size}\r\n                      totalOrder={count}\r\n                      page={page}\r\n                      onPageChange={this.onPageChange.bind(this)}\r\n                      onSelect={(data: any) => {\r\n                        this.onSelectOrder(data);\r\n                        orderContext.onSelectOrders(data);\r\n                      }}\r\n                      noorders={orderContext.totalOrders}\r\n                      noungeoorders={count}\r\n                      isLoading={isLoading}\r\n                    />\r\n                  )\r\n                }\r\n              </OrderConsumer>\r\n              {openDetails && (\r\n                <Dialog\r\n                  isOpen={true}\r\n                  canOutsideClickClose={false}\r\n                  onClose={() => ungeo_store!.setOpenDetails(false)}\r\n                  style={{ width: '85%', paddingBottom: '0' }}\r\n                  canEscapeKeyClose={false}\r\n                >\r\n                  <VCardPanel\r\n                    headerText={this.props.intl.formatMessage({ id: 'delivery.order.open.titleDetails' })}\r\n                    bodyPadding={'1px'}\r\n                    headerBackgroundColor={themeContext.headers}\r\n                    headerColor={'#FFFFFF'}\r\n                    headerTextJustify={'center'}\r\n                    headerCustomComponent={<CustomComponent action={() => ungeo_store!.setOpenDetails(false)} />}\r\n                  >\r\n                    <OrderDetailsComponent\r\n                      orderDetails={ungeo_store!.element}\r\n                      disableSave\r\n                      onSave={this.handleSaveDetails}\r\n                      onCancel={() => ungeo_store!.setOpenDetails(false)}\r\n                      nofees={0}\r\n                    />\r\n                  </VCardPanel>\r\n                </Dialog>\r\n              )}\r\n            </div>\r\n          )\r\n        }\r\n      </AppThemeContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(UnGeoOrdersComponent);\r\n","import React from 'react';\r\nimport OpenOrdersComponent from '../open/OpenOrdersComponent';\r\nimport IncompleteComponent from '../incomplete/IncompleteComponent';\r\nimport DuplicateComponent from '../duplicate/DuplicateComponent';\r\nimport UnGeoOrdersComponent from '../ungeo_orders/UnGeoOrdersComponent';\r\n\r\ninterface IListOrders {\r\n  total: number;\r\n  filterByUrgency: boolean;\r\n  searchDays: number | string;\r\n  activeList: string;\r\n}\r\n\r\nconst ListOrdersComponent: React.FunctionComponent<IListOrders> = (props: IListOrders): JSX.Element => {\r\n  const { activeList, filterByUrgency, searchDays } = props;\r\n  switch (activeList) {\r\n    case 'open':\r\n    case 'total':\r\n      return <OpenOrdersComponent filter={filterByUrgency} days={searchDays} />;\r\n      break;\r\n    case 'incomplete':\r\n      return <IncompleteComponent filter={filterByUrgency} days={searchDays} />;\r\n    case 'duplicate':\r\n      return <DuplicateComponent filter={filterByUrgency} days={searchDays} />;\r\n      break;\r\n    case 'ungeo':\r\n      return <UnGeoOrdersComponent filter={filterByUrgency} days={searchDays} />;\r\n      break;\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n\r\nexport default ListOrdersComponent;\r\n","import React from 'react';\r\nimport { onlyNumber } from '../../../commons/Validators';\r\nimport { Button } from '@blueprintjs/core';\r\nimport { Col } from 'react-flexbox-grid';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { SButtonDown, SCol, styleButton, SVInputField } from '../style';\r\nimport { FieldState, FormState } from 'formstate';\r\nimport { IOrderContext, OrderContext } from '../../../containers/OrderManagementContainer';\r\n\r\nconst OrderConsumer = OrderContext.Consumer;\r\n\r\ninterface IBottomActions extends InjectedIntlProps {\r\n  isLoading: boolean;\r\n  searchDays: number | string;\r\n}\r\n\r\nconst BottomActionsComponent: React.FunctionComponent<IBottomActions> = (props: IBottomActions): JSX.Element => {\r\n  const form = new FormState<any>({\r\n    days: new FieldState(props.searchDays)\r\n  });\r\n  return (\r\n    <OrderConsumer>\r\n      {(orderContext: IOrderContext) =>\r\n        orderContext && (\r\n          <React.Fragment>\r\n            <SCol lg={7} xs={12}>\r\n              <SVInputField\r\n                onChange={(data: any) => {\r\n                  orderContext.onSearchByDays(data);\r\n                }}\r\n                type={'text'}\r\n                inline\r\n                validators={[onlyNumber]}\r\n                id={'iddays'}\r\n                label={props.intl.formatMessage({ id: 'delivery.order.open.filterDays' })}\r\n                fieldState={form.$.days}\r\n                layer={{ inputWidth: 2, labelWidth: 8 }}\r\n              />\r\n              <SButtonDown icon={'tick'} onClick={orderContext.refresOrder} disabled={props.isLoading}>\r\n                {props.intl.formatMessage({ id: 'delivery.order.open.btn_go' })}\r\n              </SButtonDown>\r\n            </SCol>\r\n            <Col lg={5} xs={12} style={{ display: 'flex', flexDirection: 'row-reverse' }}>\r\n              <Button\r\n                icon={'export'}\r\n                style={{ ...styleButton, marginRight: 5 }}\r\n                onClick={orderContext.onExportExcel}\r\n                disabled={orderContext.isOrdersLoading || orderContext.isOrderMLoading}\r\n              >\r\n                {props.intl.formatMessage({ id: 'delivery.order.review.btn_export_excel' })}\r\n              </Button>\r\n              <Button\r\n                icon={'refresh'}\r\n                style={{ ...styleButton, marginRight: 5 }}\r\n                onClick={orderContext.refreshList}\r\n                disabled={orderContext.isOrdersLoading || orderContext.isOrderMLoading}\r\n              >\r\n                {props.intl.formatMessage({ id: 'delivery.order.open.btn_refresh' })}\r\n              </Button>\r\n            </Col>\r\n          </React.Fragment>\r\n        )\r\n      }\r\n    </OrderConsumer>\r\n  );\r\n};\r\n\r\nexport default injectIntl(BottomActionsComponent);\r\n","import React, { Component } from 'react';\r\nimport { Col, Row } from 'react-flexbox-grid';\r\nimport { FieldState, FormState } from 'formstate';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Classes, Tooltip } from '@blueprintjs/core';\r\nimport { getFormValue, VCardPanel, VInputField, VSelectField } from 'gsi-vx-ui';\r\nimport moment from 'moment';\r\nimport {\r\n  BtnAddProfile,\r\n  ButtonRowBottom,\r\n  ButtonRowTop,\r\n  DateField,\r\n  FieldsCol,\r\n  FilterCol,\r\n  layerCheck,\r\n  layerNumber,\r\n  NumberField,\r\n  StyledQtyInput,\r\n  StyledTankInput,\r\n  VCardCheckList,\r\n  VCardPanelModList\r\n} from '../../order_management/style';\r\nimport { VEditableList } from '../../../../../../commons/components/editable_list/VEditableList';\r\nimport { onlyNumber } from '../../../commons/Validators';\r\nimport { IPropsFilterForm, IStateFilterForm } from './IFilterForm';\r\nimport 'moment/locale/es';\r\nimport { injectIntl } from 'react-intl';\r\nimport { AppThemeContext } from '../../../../../../../App';\r\nimport { ITheme } from '../../../../../../../core/stores/AppStore';\r\n\r\n@observer\r\nclass FilterFormComponent extends Component<IPropsFilterForm, IStateFilterForm> {\r\n  form!: FormState<any>;\r\n  constructor(props: IPropsFilterForm) {\r\n    super(props);\r\n    this.initForm();\r\n  }\r\n  public state: IStateFilterForm = {\r\n    newProfile: false,\r\n    products: [],\r\n    zones: [],\r\n    urgencies: [],\r\n    orderTypes: [],\r\n    endDate: null,\r\n    endOrderQuantity: null,\r\n    startDate: null,\r\n    startOrderQuantity: null,\r\n    startTankPercent: null,\r\n    endTankPercent: null,\r\n    showReturnedOrders: false,\r\n    showUnGeocodeOrders: false,\r\n    excludeCreditHolds: false,\r\n    showOpenOrders: false,\r\n    excludeBalances: false,\r\n    showMarkedOrders: false\r\n  };\r\n  initForm = () => {\r\n    this.form = new FormState<any>({\r\n      startOrderQuantity: new FieldState(this.state.startOrderQuantity).validators(onlyNumber),\r\n      endOrderQuantity: new FieldState(this.state.endOrderQuantity).validators(onlyNumber),\r\n      showReturnedOrders: new FieldState(this.state.showReturnedOrders),\r\n      showMarkedOrders: new FieldState(this.state.showMarkedOrders),\r\n      showOpenOrders: new FieldState(this.state.showOpenOrders),\r\n      startTankPercent: new FieldState(this.state.startTankPercent).validators(onlyNumber),\r\n      endTankPercent: new FieldState(this.state.endTankPercent).validators(onlyNumber),\r\n      excludeBalances: new FieldState(this.state.excludeBalances),\r\n      excludeCreditHolds: new FieldState(this.state.excludeCreditHolds),\r\n      showUnGeocodeOrders: new FieldState(this.state.showUnGeocodeOrders),\r\n      profileId: new FieldState(''),\r\n      startDate: new FieldState(this.state.startDate),\r\n      endDate: new FieldState(this.state.endDate),\r\n      days: new FieldState(''),\r\n      featureName: new FieldState('ORDER_ADVANCED_FILTER'),\r\n      active: new FieldState(false),\r\n      urgencyFactors: new FieldState(this.state.urgencies),\r\n      zones: new FieldState(this.state.zones),\r\n      products: new FieldState(this.state.products),\r\n      orderTypes: new FieldState(this.state.orderTypes),\r\n      name: new FieldState('')\r\n    });\r\n  };\r\n  onSubmit = () => {\r\n    const obj = getFormValue(this.form);\r\n    obj.products = this.form.$.products.value;\r\n    obj.name = this.form.$.name.value;\r\n    obj.zones = this.form.$.zones.value;\r\n    obj.orderTypes = this.form.$.orderTypes.value;\r\n    obj.urgencyFactors = this.form.$.urgencyFactors.value;\r\n    this.form.validate().then(res => {\r\n      !res.hasError && this.props.onSave(obj);\r\n    });\r\n  };\r\n  onSelectProfile = async (idprofile: any) => {\r\n    const profile = this.props.advancedProfiles.find(p => {\r\n      return p.profileId === idprofile;\r\n    });\r\n\r\n    const products = await this.getProducts(profile);\r\n    const orderTypes = await this.getOrderTypes(profile);\r\n    const zones = await this.getZones(profile);\r\n    const urgencies = await this.getUrgencies(profile);\r\n    const {\r\n      endDate,\r\n      startDate,\r\n      startOrderQuantity,\r\n      startTankPercent,\r\n      name,\r\n      showReturnedOrders,\r\n      showUnGeocodeOrders,\r\n      excludeCreditHolds,\r\n      showMarkedOrders,\r\n      showOpenOrders,\r\n      excludeBalances,\r\n      endOrderQuantity,\r\n      endTankPercent\r\n    } = profile;\r\n    moment.locale(this.props.intl ? this.props.intl.locale : 'en');\r\n    const newEndDate = endDate && moment(`${endDate[0]}-${endDate[1]}-${endDate[2]}`).toDate();\r\n    const newStartDate = startDate && moment(`${startDate[0]}-${startDate[1]}-${startDate[2]}`).toDate();\r\n    this.form.$.endDate.onChange(newEndDate);\r\n    this.form.$.endOrderQuantity.onChange(endOrderQuantity);\r\n    this.form.$.endTankPercent.onChange(endTankPercent);\r\n    this.form.$.startDate.onChange(newStartDate);\r\n    this.form.$.startOrderQuantity.onChange(startOrderQuantity);\r\n    this.form.$.startTankPercent.onChange(startTankPercent);\r\n    this.form.$.urgencyFactors.onChange(urgencies.idelements);\r\n    this.form.$.zones.onChange(zones.idelements);\r\n    this.form.$.products.onChange(products.idelements);\r\n    this.form.$.orderTypes.onChange(orderTypes.idelements);\r\n    this.form.$.name.onChange(name);\r\n    this.form.$.showReturnedOrders.onChange(showReturnedOrders);\r\n    this.form.$.showUnGeocodeOrders.onChange(showUnGeocodeOrders);\r\n    this.form.$.excludeCreditHolds.onChange(excludeCreditHolds);\r\n    this.form.$.showMarkedOrders.onChange(showMarkedOrders);\r\n    this.form.$.showOpenOrders.onChange(showOpenOrders);\r\n    this.form.$.excludeBalances.onChange(excludeBalances);\r\n    this.changeDays();\r\n    this.setState({\r\n      ...this.state,\r\n      endOrderQuantity,\r\n      endTankPercent,\r\n      startTankPercent,\r\n      startOrderQuantity,\r\n      showReturnedOrders,\r\n      showUnGeocodeOrders,\r\n      excludeCreditHolds,\r\n      showMarkedOrders,\r\n      showOpenOrders,\r\n      excludeBalances,\r\n      startDate: newStartDate,\r\n      endDate: newEndDate,\r\n      products: products.elements,\r\n      orderTypes: orderTypes.elements,\r\n      zones: zones.elements,\r\n      urgencies: urgencies.elements\r\n    });\r\n  };\r\n  onAddCancelProfile = (newProfile: boolean) => {\r\n    this.form.reset();\r\n    this.setState({ ...this.state, newProfile });\r\n    newProfile ? this.form.$.profileId.onChange(-1) : '';\r\n    this.changeDays();\r\n  };\r\n  getProducts = (profile: any) => {\r\n    const elements: any[] = [];\r\n    const idelements: any[] = [];\r\n    profile.products.map((p: any) => {\r\n      elements.push({ label: p.productName, value: p.productId });\r\n      idelements.push(p.productId);\r\n    });\r\n    return { elements, idelements };\r\n  };\r\n  getOrderTypes = (profile: any) => {\r\n    const elements: any[] = [];\r\n    const idelements: any[] = [];\r\n    profile.orderTypes.map((o: any) => {\r\n      elements.push({ label: o.ordTypeName, value: o.orderTypeid });\r\n      idelements.push(o.orderTypeid);\r\n    });\r\n    return { elements, idelements };\r\n  };\r\n  getZones = (profile: any) => {\r\n    const elements: any[] = [];\r\n    const idelements: any[] = [];\r\n    profile.zones.map((z: any) => {\r\n      elements.push({ label: z.zoneName, value: z.zoneId });\r\n      idelements.push(z.zoneId);\r\n    });\r\n    return { elements, idelements };\r\n  };\r\n  getUrgencies = (profile: any) => {\r\n    const elements: any[] = [];\r\n    const idelements: any[] = [];\r\n    profile.urgencyFactors.map((u: any) => {\r\n      elements.push({ label: u.value, value: u.key });\r\n      idelements.push(u.key);\r\n    });\r\n    return { elements, idelements };\r\n  };\r\n  isOnList = (key: any, list: any[]) => {\r\n    return !!list.find((l: any) => l.value === key.value);\r\n  };\r\n  updateList = (listSelected: any[], list: any[]) => {\r\n    const result = !!list.length\r\n      ? listSelected.filter(l => {\r\n          return !this.isOnList(l, list);\r\n        })\r\n      : listSelected;\r\n\r\n    return result;\r\n  };\r\n  changeDays = () => {\r\n    const start = moment(this.form.$.startDate.value);\r\n    const end = moment(this.form.$.endDate.value);\r\n    const diff_days = end.diff(start, 'days');\r\n    const days = diff_days && diff_days > 0 ? diff_days : '';\r\n    this.form.$.days.onChange(days);\r\n  };\r\n  getProfileInput = () => {\r\n    const { listProfiles, isLoading } = this.props;\r\n    return this.state.newProfile ? (\r\n      <VInputField\r\n        inline\r\n        layer={{ inputOrientation: 'end', inputWidth: 10 }}\r\n        label={this.props.intl.formatMessage({ id: 'delivery.order.open.profile' })}\r\n        id={'idnewprofile'}\r\n        fieldState={this.form.$.name}\r\n        fill\r\n        required\r\n      />\r\n    ) : (\r\n      <VSelectField\r\n        label={this.props.intl.formatMessage({ id: 'delivery.order.open.profile' })}\r\n        id={'idselectprofile'}\r\n        inline\r\n        required\r\n        className={isLoading ? Classes.SKELETON : ''}\r\n        onChange={this.onSelectProfile}\r\n        fieldState={this.form.$.profileId}\r\n        defaultText={this.props.intl.formatMessage({ id: 'delivery.order.open.select_profile' })}\r\n        layer={{ inputOrientation: 'end', inputWidth: 12 }}\r\n        fill\r\n        options={listProfiles}\r\n      />\r\n    );\r\n  };\r\n  getEditableListInputs = () => {\r\n    const { productList, zoneslist, urgencylist, typeslist } = this.props;\r\n    const { urgencies, products, zones, orderTypes } = this.state;\r\n    return (\r\n      <AppThemeContext.Consumer>\r\n        {(themeContext: ITheme) =>\r\n          themeContext && (\r\n            <Row>\r\n              <FilterCol xs={12} sm={12} md={6} lg={3}>\r\n                <VEditableList\r\n                  headerText={this.props.intl.formatMessage({ id: 'delivery.order.open.product' })}\r\n                  elementsSelected={products}\r\n                  toolTipAdd={this.props.intl.formatMessage({ id: 'delivery.order.open.addProduct' })}\r\n                  headerBgColor={themeContext.headers}\r\n                  headerColor={themeContext.sidebar_text}\r\n                  toolTipDel={this.props.intl.formatMessage({ id: 'delivery.order.open.delProduct' })}\r\n                  listSelectElements={this.updateList(productList, products)}\r\n                  id={'ideditproduct'}\r\n                  onSelect={(data: any) => {\r\n                    this.form.$.products.onChange(data);\r\n                  }}\r\n                />\r\n              </FilterCol>\r\n              <FilterCol xs={12} sm={12} md={6} lg={3}>\r\n                <VEditableList\r\n                  headerText={this.props.intl.formatMessage({ id: 'delivery.order.open.order_type' })}\r\n                  toolTipAdd={this.props.intl.formatMessage({ id: 'delivery.order.open.add_order_type' })}\r\n                  toolTipDel={this.props.intl.formatMessage({ id: 'delivery.order.open.del_order_type' })}\r\n                  headerBgColor={themeContext.headers}\r\n                  headerColor={themeContext.sidebar_text}\r\n                  elementsSelected={orderTypes}\r\n                  listSelectElements={typeslist}\r\n                  id={'ideditorder'}\r\n                  onSelect={(data: any) => {\r\n                    this.form.$.orderTypes.onChange(data);\r\n                  }}\r\n                />\r\n              </FilterCol>\r\n              <FilterCol xs={12} sm={12} md={6} lg={3}>\r\n                <VEditableList\r\n                  headerText={this.props.intl.formatMessage({ id: 'delivery.order.open.route' })}\r\n                  elementsSelected={zones}\r\n                  toolTipAdd={this.props.intl.formatMessage({ id: 'delivery.order.open.add_route' })}\r\n                  toolTipDel={this.props.intl.formatMessage({ id: 'delivery.order.open.del_route' })}\r\n                  headerBgColor={themeContext.headers}\r\n                  headerColor={themeContext.sidebar_text}\r\n                  listSelectElements={zoneslist}\r\n                  id={'ideditrout'}\r\n                  onSelect={(data: any) => {\r\n                    this.form.$.zones.onChange(data);\r\n                  }}\r\n                />\r\n              </FilterCol>\r\n              <FilterCol xs={12} sm={12} md={6} lg={3}>\r\n                <VEditableList\r\n                  headerText={this.props.intl.formatMessage({ id: 'delivery.order.open.urgency' })}\r\n                  toolTipAdd={this.props.intl.formatMessage({ id: 'delivery.order.open.add_urgency' })}\r\n                  headerBgColor={themeContext.headers}\r\n                  headerColor={themeContext.sidebar_text}\r\n                  toolTipDel={this.props.intl.formatMessage({ id: 'delivery.order.open.del_urgency' })}\r\n                  id={'idediturgency'}\r\n                  elementsSelected={urgencies}\r\n                  listSelectElements={urgencylist}\r\n                  onSelect={(data: any) => {\r\n                    this.form.$.urgencyFactors.onChange(data);\r\n                  }}\r\n                />\r\n              </FilterCol>\r\n            </Row>\r\n          )\r\n        }\r\n      </AppThemeContext.Consumer>\r\n    );\r\n  };\r\n  getTextCheckFields = () => {\r\n    const form = this.form;\r\n    return (\r\n      <AppThemeContext.Consumer>\r\n        {(themeContext: ITheme) =>\r\n          themeContext && (\r\n            <Row>\r\n              <FilterCol xs={12} sm={12} md={6} lg={3}>\r\n                <VCardPanel\r\n                  headerText={this.props.intl.formatMessage({ id: 'delivery.order.open.order_qty' })}\r\n                  bodyPadding={'1px'}\r\n                  headerBackgroundColor={themeContext.headers}\r\n                  headerColor={'#FFFFFF'}\r\n                >\r\n                  <StyledQtyInput\r\n                    id={'quantity>='}\r\n                    inline\r\n                    fieldState={form.$.startOrderQuantity}\r\n                    label={this.props.intl.formatMessage({ id: 'delivery.order.open.order_greater_qty' })}\r\n                    layer={layerNumber}\r\n                  />\r\n                  <StyledQtyInput\r\n                    id={'quantity<='}\r\n                    inline\r\n                    fieldState={form.$.endOrderQuantity}\r\n                    label={this.props.intl.formatMessage({ id: 'delivery.order.open.order_less_qty' })}\r\n                    layer={layerNumber}\r\n                  />\r\n                </VCardPanel>\r\n              </FilterCol>\r\n              <FilterCol xs={12} sm={12} md={6} lg={3}>\r\n                <VCardPanel\r\n                  headerText={'Tank Percentaje'}\r\n                  bodyPadding={'1px'}\r\n                  headerBackgroundColor={themeContext.headers}\r\n                  headerColor={'#FFFFFF'}\r\n                >\r\n                  <StyledTankInput\r\n                    id={'pct>='}\r\n                    inline\r\n                    fieldState={form.$.startTankPercent}\r\n                    label={'Pct >='}\r\n                    layer={{\r\n                      inputWidth: 9\r\n                    }}\r\n                  />\r\n                  <StyledTankInput\r\n                    id={'pct<='}\r\n                    inline\r\n                    fieldState={form.$.endTankPercent}\r\n                    label={'Pct <='}\r\n                    layer={{\r\n                      inputWidth: 9\r\n                    }}\r\n                  />\r\n                </VCardPanel>\r\n              </FilterCol>\r\n              <FilterCol xs={12} sm={12} lg={6}>\r\n                <VCardPanelModList\r\n                  headerText={'Open Status'}\r\n                  bodyPadding={'1px'}\r\n                  headerBackgroundColor={themeContext.headers}\r\n                  headerColor={'#FFFFFF'}\r\n                >\r\n                  <Row>\r\n                    <Col xs={6}>\r\n                      <VCardCheckList\r\n                        alignIndicator={'right'}\r\n                        label=\"Returned Orders Only\"\r\n                        inline\r\n                        checkBoxAtLeft\r\n                        layer={layerCheck}\r\n                        fieldState={form.$.showReturnedOrders}\r\n                        id={'1'}\r\n                      />\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                      <VCardCheckList\r\n                        alignIndicator={'right'}\r\n                        checkBoxAtLeft\r\n                        layer={layerCheck}\r\n                        label=\"Marked Orders Only\"\r\n                        inline\r\n                        id={'2'}\r\n                        fieldState={form.$.showMarkedOrders}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col xs={6}>\r\n                      <VCardCheckList\r\n                        alignIndicator={'right'}\r\n                        checkBoxAtLeft\r\n                        layer={layerCheck}\r\n                        label=\"All Open Orders\"\r\n                        inline\r\n                        fieldState={form.$.showOpenOrders}\r\n                        id={'3'}\r\n                      />\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                      <VCardCheckList\r\n                        alignIndicator={'right'}\r\n                        checkBoxAtLeft\r\n                        layer={layerCheck}\r\n                        label=\"Exclude Balances\"\r\n                        inline\r\n                        fieldState={form.$.excludeBalances}\r\n                        id={'4'}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col xs={6}>\r\n                      <VCardCheckList\r\n                        alignIndicator={'right'}\r\n                        checkBoxAtLeft\r\n                        layer={layerCheck}\r\n                        label=\"Exclude Credit Hold\"\r\n                        inline\r\n                        fieldState={form.$.excludeCreditHolds}\r\n                        id={'5'}\r\n                      />\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                      <VCardCheckList\r\n                        alignIndicator={'right'}\r\n                        checkBoxAtLeft\r\n                        layer={layerCheck}\r\n                        label=\"Ungeocoded Only\"\r\n                        inline\r\n                        fieldState={form.$.showUnGeocodeOrders}\r\n                        id={'6'}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </VCardPanelModList>\r\n              </FilterCol>\r\n            </Row>\r\n          )\r\n        }\r\n      </AppThemeContext.Consumer>\r\n    );\r\n  };\r\n  getDateInputFields = () => {\r\n    return (\r\n      <FieldsCol xs={12} lg={10}>\r\n        <DateField\r\n          dateType={'DATE'}\r\n          layer={{ inputWidth: 6 }}\r\n          id={'iddialstartorderdate'}\r\n          label={'Start Order Date'}\r\n          onChange={this.changeDays}\r\n          inline\r\n          fieldState={this.form.$.startDate}\r\n        />\r\n        <DateField\r\n          dateType={'DATE'}\r\n          layer={{ inputWidth: 6 }}\r\n          inline\r\n          onChange={this.changeDays}\r\n          id={'iddialendorderdate'}\r\n          label={'End Order Date'}\r\n          fieldState={this.form.$.endDate}\r\n        />\r\n        <NumberField\r\n          layer={{ inputWidth: 4 }}\r\n          inline\r\n          type={'text'}\r\n          disabled\r\n          id={'iddays'}\r\n          label={'Days'}\r\n          fieldState={this.form.$.days}\r\n        />\r\n      </FieldsCol>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div style={{ width: '100%', padding: '0 20px' }}>\r\n        <ButtonRowTop>\r\n          <FilterCol>\r\n            <div style={{ width: 210 }}>{this.getProfileInput()}</div>\r\n          </FilterCol>\r\n          {this.state.newProfile ? (\r\n            <Tooltip\r\n              usePortal\r\n              hoverCloseDelay={0}\r\n              position={'bottom'}\r\n              content={this.props.intl.formatMessage({ id: 'commons.cancel' })}\r\n            >\r\n              <BtnAddProfile icon=\"disable\" onClick={() => this.onAddCancelProfile(false)} />\r\n            </Tooltip>\r\n          ) : (\r\n            <Tooltip\r\n              usePortal\r\n              hoverCloseDelay={0}\r\n              position={'bottom'}\r\n              content={this.props.intl.formatMessage({ id: 'delivery.order.open.add_profile' })}\r\n            >\r\n              <BtnAddProfile icon=\"plus\" onClick={() => this.onAddCancelProfile(true)} />\r\n            </Tooltip>\r\n          )}\r\n        </ButtonRowTop>\r\n        {this.getEditableListInputs()}\r\n        {this.getTextCheckFields()}\r\n        <Row>{this.getDateInputFields()}</Row>\r\n        <ButtonRowBottom>\r\n          <Col>\r\n            <Button icon=\"saved\" text=\"Save\" large onClick={this.onSubmit} />\r\n          </Col>\r\n        </ButtonRowBottom>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default injectIntl(FilterFormComponent);\r\n","import React, { Component } from 'react';\r\nimport { AppThemeContext } from '../../../../../../../App';\r\nimport { Button, Dialog } from '@blueprintjs/core';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { OrderManagementStore } from '../../../stores/OrderManagementStore';\r\nimport { VCardPanel, VSuspenseLoading } from 'gsi-vx-ui';\r\nimport CustomComponent from '../../../commons/CustomComponent';\r\nimport FilterFormComponent from '../filter_component/FilterFormComponent';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { styleButton } from '../style';\r\nimport { ITheme } from '../../../../../../../core/stores/AppStore';\r\n\r\ninterface IDialogFilter extends InjectedIntlProps {\r\n  order_management_store?: OrderManagementStore;\r\n}\r\ninterface IDialogFilterState {\r\n  open: boolean;\r\n}\r\n@inject('order_management_store')\r\n@observer\r\nclass DialogFilterComponent extends Component<IDialogFilter, IDialogFilterState> {\r\n  constructor(props: IDialogFilter) {\r\n    super(props);\r\n  }\r\n  public state: IDialogFilterState = {\r\n    open: false\r\n  };\r\n  changeOpen = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n  handleSaveFilters = (data: any) => {\r\n    if (data.profileId && data.profileId !== -1) {\r\n      this.props.order_management_store!.updateProfile(data);\r\n    } else {\r\n      data.profileId = null;\r\n      this.props.order_management_store!.saveProfile(data);\r\n    }\r\n    this.changeOpen();\r\n  };\r\n  render() {\r\n    const {\r\n      listZone,\r\n      listUrgency,\r\n      listTypes,\r\n      listProducts,\r\n      isLoading,\r\n      listProfiles,\r\n      advancedProfiles\r\n    } = this.props.order_management_store!;\r\n    return (\r\n      <React.Fragment>\r\n        <Button style={styleButton} icon={'filter'} onClick={this.changeOpen}>\r\n          {this.props.intl.formatMessage({ id: 'delivery.order.open.btn_filter' })}\r\n        </Button>\r\n        <Dialog\r\n          isOpen={this.state.open}\r\n          canOutsideClickClose={false}\r\n          usePortal\r\n          onClose={this.changeOpen}\r\n          style={{ width: '85%', paddingBottom: '0' }}\r\n          canEscapeKeyClose={false}\r\n        >\r\n          <AppThemeContext.Consumer>\r\n            {(themeContext: ITheme) =>\r\n              themeContext && (\r\n                <VCardPanel\r\n                  headerText={this.props.intl.formatMessage({ id: 'delivery.order.open.titleFilter' })}\r\n                  bodyPadding={'1px'}\r\n                  headerBackgroundColor={themeContext.headers}\r\n                  headerColor={'#FFFFFF'}\r\n                  headerTextJustify={'center'}\r\n                  headerCustomComponent={<CustomComponent action={this.changeOpen} />}\r\n                >\r\n                  <VSuspenseLoading>\r\n                    <FilterFormComponent\r\n                      onSave={this.handleSaveFilters}\r\n                      productList={listProducts}\r\n                      zoneslist={listZone}\r\n                      isLoading={isLoading}\r\n                      typeslist={listTypes}\r\n                      listProfiles={listProfiles}\r\n                      advancedProfiles={advancedProfiles}\r\n                      urgencylist={listUrgency}\r\n                    />\r\n                  </VSuspenseLoading>\r\n                </VCardPanel>\r\n              )\r\n            }\r\n          </AppThemeContext.Consumer>\r\n        </Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(DialogFilterComponent);\r\n","import React, { Component } from 'react';\r\nimport { AnchorButton, Tooltip } from '@blueprintjs/core';\r\nimport styled from 'styled-components';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { Col, Row } from 'react-flexbox-grid';\r\nimport { FFilterAccContext } from '../../SearchAccount';\r\n\r\nconst WhiteButton = styled(AnchorButton)`\r\n  svg {\r\n    fill: #fff !important;\r\n  }\r\n`;\r\n\r\nclass SearchCriteriaActions extends Component<InjectedIntlProps> {\r\n  render() {\r\n    const { intl } = this.props;\r\n    return (\r\n      <FFilterAccContext.Consumer>\r\n        {value => (\r\n          <Row end={'xs'}>\r\n            <Col xs={6}>\r\n              <Tooltip\r\n                usePortal\r\n                hoverCloseDelay={0}\r\n                position={'bottom'}\r\n                content={intl.formatMessage({\r\n                  id: 'commons.search',\r\n                  defaultMessage: 'Search'\r\n                })}\r\n              >\r\n                <WhiteButton onClick={value.onSearchAcc} icon={'search'} fill minimal disabled={value.loadingAccount} />\r\n              </Tooltip>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <Tooltip\r\n                usePortal\r\n                hoverCloseDelay={0}\r\n                position={'bottom'}\r\n                content={intl.formatMessage({\r\n                  id: 'commons.clear',\r\n                  defaultMessage: 'Clear'\r\n                })}\r\n              >\r\n                <WhiteButton\r\n                  onClick={value.onClearSearchAcc}\r\n                  icon={'eraser'}\r\n                  fill\r\n                  minimal\r\n                  disabled={value.loadingAccount}\r\n                />\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </FFilterAccContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(SearchCriteriaActions);\r\n","import React, { Component } from 'react';\r\nimport { VCardPanel, VInputField, VSelectField } from 'gsi-vx-ui';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { FormState } from 'formstate';\r\nimport { ILayer } from 'gsi-vx-ui/lib/types/Form/Inputs/ILayer';\r\nimport SearchCriteriaActions from '../search_criteria_actions/SearchCriteriaActions';\r\nimport { AppThemeContext } from '../../../../../../../../../App';\r\nimport { ITheme } from '../../../../../../../../../core/stores/AppStore';\r\n\r\ninterface ISearchAccountForm extends InjectedIntlProps {\r\n  form: FormState<any>;\r\n  products: any[];\r\n  states: any[];\r\n}\r\n\r\nclass SearchCriteriaAccountForm extends Component<ISearchAccountForm> {\r\n  constructor(props: ISearchAccountForm) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { intl, form, states, products } = this.props;\r\n    const layer: ILayer = {\r\n      labelWidth: 4,\r\n      inputWidth: 8,\r\n      labelOrientation: 'end',\r\n      inputOrientation: 'start'\r\n    };\r\n    return (\r\n      <AppThemeContext.Consumer>\r\n        {(themeContext: ITheme) =>\r\n          themeContext && (\r\n            <VCardPanel\r\n              headerText={intl.formatMessage({ id: 'delivery.order.open.searchCriteria' })}\r\n              bodyPadding={'5px'}\r\n              height={'315px'}\r\n              headerBackgroundColor={themeContext.headers}\r\n              headerColor={'#FFFFFF'}\r\n              headerCustomComponent={<SearchCriteriaActions />}\r\n            >\r\n              <VInputField\r\n                id={'account'}\r\n                fieldState={form.$.accountId}\r\n                fill\r\n                inline\r\n                layer={layer}\r\n                label={'Account Id'}\r\n              />\r\n              <VInputField id={'name'} fieldState={form.$.name} fill inline layer={layer} label={'Name'} />\r\n              <VSelectField\r\n                label={'Product:'}\r\n                id={'products'}\r\n                inline\r\n                fieldState={form.$.productId}\r\n                layer={layer}\r\n                fill\r\n                options={products}\r\n              />\r\n              <VInputField id={'city'} fieldState={form.$.city} fill inline layer={layer} label={'City'} />\r\n              <VSelectField\r\n                label={'State/Prov:'}\r\n                id={'stateProv'}\r\n                inline\r\n                fieldState={form.$.stateProv}\r\n                layer={layer}\r\n                fill\r\n                options={states}\r\n              />\r\n            </VCardPanel>\r\n          )\r\n        }\r\n      </AppThemeContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(SearchCriteriaAccountForm);\r\n","import React, { Component } from 'react';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { VCardPanel, VSpinner, VTable } from 'gsi-vx-ui';\r\nimport { Col, Row } from 'react-flexbox-grid';\r\nimport { Button } from '@blueprintjs/core';\r\nimport { AppThemeContext } from '../../../../../../../App';\r\nimport { upperCase } from 'lodash';\r\nimport { ITheme } from '../../../../../../../core/stores/AppStore';\r\nimport PageComponent from '../../../../../../commons/components/Paginator/PagePaginatorComponent';\r\n\r\ninterface IProps extends InjectedIntlProps {\r\n  data: any[];\r\n  columns: any[];\r\n  isLoading: boolean;\r\n  disableBtn?: boolean;\r\n  numberAccount: number;\r\n  page: number;\r\n  pageSize: number;\r\n  onPageChange(data: any, store: string): void;\r\n  onOrderColumns(columns: string[]): void;\r\n  onSelectAcct(data: any): void;\r\n  onCreateOrder(): void;\r\n}\r\n\r\ninterface IState {}\r\n\r\nclass SearchResults extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n  }\r\n  onPageChg(data: any) {\r\n    this.props.onPageChange(data, 'accounts');\r\n  }\r\n\r\n  render() {\r\n    const nameHeader = this.getNameHeader(this.props.numberAccount);\r\n    return (\r\n      <AppThemeContext.Consumer>\r\n        {(themeContext: ITheme) =>\r\n          themeContext && (\r\n            <React.Fragment>\r\n              <VCardPanel\r\n                headerText={nameHeader}\r\n                bodyPadding={'0px'}\r\n                headerHorizontalAlign={'center'}\r\n                height={'375px'}\r\n                headerBackgroundColor={themeContext.headers}\r\n                headerColor={'#FFFFFF'}\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <VSpinner />\r\n                ) : (\r\n                  <VTable\r\n                    tableHeight={'300px'}\r\n                    columns={this.props.columns}\r\n                    cellSelectionType={'ENTIRE_ROW'}\r\n                    onOrderColumns={this.props.onOrderColumns}\r\n                    actionsSelection={{ onSelectionChange: this.props.onSelectAcct }}\r\n                    columns_name={{\r\n                      accountId: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.account' })),\r\n                      name: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.name' })),\r\n                      fullAddress: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.address' })),\r\n                      city: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.city' })),\r\n                      state: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.state_prov' })),\r\n                      productName: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.product' })),\r\n                      tanksize: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.tank' }))\r\n                    }}\r\n                    data={this.props.data}\r\n                    reordering={true}\r\n                    footer={\r\n                      <PageComponent\r\n                        currentPage={this.props.page}\r\n                        onPageChanged={this.onPageChg.bind(this)}\r\n                        pageLimit={this.props.pageSize}\r\n                        totalRecords={this.props.numberAccount}\r\n                      />\r\n                    }\r\n                  />\r\n                )}\r\n              </VCardPanel>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <div style={{ display: 'flex', justifyContent: 'flex-end', margin: '10px 0px' }}>\r\n                    <Button\r\n                      icon=\"tick\"\r\n                      text={'Create Order'}\r\n                      onClick={this.props.onCreateOrder}\r\n                      disabled={this.props.disableBtn}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </React.Fragment>\r\n          )\r\n        }\r\n      </AppThemeContext.Consumer>\r\n    );\r\n  }\r\n\r\n  private getNameHeader(result: number) {\r\n    return `${this.props.intl.formatMessage({ id: 'delivery.order.open.search_results' })} (${result})`;\r\n  }\r\n}\r\n\r\nexport default injectIntl(SearchResults);\r\n","import React, { Component } from 'react';\r\nimport { VCardPanel, VSpinner, VTable } from 'gsi-vx-ui';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { Col, Row } from 'react-flexbox-grid';\r\nimport { Button } from '@blueprintjs/core';\r\nimport { FCreateOrderContext } from '../search_account/SearchAccount';\r\nimport { AppThemeContext } from '../../../../../../../App';\r\nimport { upperCase } from 'lodash';\r\nimport { IOrderContext, OrderContext } from '../../../containers/OrderManagementContainer';\r\nimport { ITheme } from '../../../../../../../core/stores/AppStore';\r\nimport PageComponent from '../../../../../../commons/components/Paginator/PagePaginatorComponent';\r\n\r\nconst OrderConsumer = OrderContext.Consumer;\r\n\r\ninterface IProps extends InjectedIntlProps {\r\n  total: number;\r\n  page: number;\r\n  pageSize: number;\r\n  onPageChange(data: any, store: string): void;\r\n  data: any[];\r\n  isLoading: boolean;\r\n}\r\n\r\nclass OrderHistory extends Component<IProps> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n  }\r\n  onPageChg(data: any) {\r\n    this.props.onPageChange(data, 'history');\r\n  }\r\n  render() {\r\n    const { data, isLoading } = this.props;\r\n    return (\r\n      <FCreateOrderContext.Consumer>\r\n        {value => (\r\n          <AppThemeContext.Consumer>\r\n            {(themeContext: ITheme) =>\r\n              themeContext && (\r\n                <OrderConsumer>\r\n                  {(orderContext: IOrderContext) =>\r\n                    orderContext && (\r\n                      <VCardPanel\r\n                        headerBackgroundColor={themeContext.headers}\r\n                        headerColor={'#FFFFFF'}\r\n                        headerText={this.getNameHeader(0)}\r\n                        bodyPadding={'0px'}\r\n                        headerHorizontalAlign={'center'}\r\n                      >\r\n                        {isLoading ? (\r\n                          <VSpinner />\r\n                        ) : (\r\n                          <VTable\r\n                            columns={[\r\n                              'orderDate',\r\n                              'type',\r\n                              'orderStatus',\r\n                              'qty',\r\n                              'name',\r\n                              'truck',\r\n                              'lastDate',\r\n                              'lastDelQty',\r\n                              'img'\r\n                            ]}\r\n                            cellSelectionType={'ENTIRE_ROW'}\r\n                            columns_name={{\r\n                              orderdate: upperCase(\r\n                                this.props.intl.formatMessage({ id: 'delivery.order.open.order_date' })\r\n                              ),\r\n                              type: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.order_type' })),\r\n                              orderStatus: upperCase(\r\n                                this.props.intl.formatMessage({ id: 'delivery.order.open.order_status' })\r\n                              ),\r\n                              qty: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.order_qty' })),\r\n                              truck: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.truck' })),\r\n                              lastDate: upperCase(\r\n                                this.props.intl.formatMessage({ id: 'delivery.order.open.del_date' })\r\n                              ),\r\n                              lastDelQty: upperCase(\r\n                                this.props.intl.formatMessage({ id: 'delivery.order.open.del_qty' })\r\n                              ),\r\n                              img: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.img' })),\r\n                              name: upperCase(this.props.intl.formatMessage({ id: 'delivery.order.open.driver' }))\r\n                            }}\r\n                            data={data}\r\n                            widgetsCell={[\r\n                              {\r\n                                column: 'type',\r\n                                widget: {\r\n                                  type: 'CUSTOMERCOMPONENT',\r\n                                  cusmtomerCell: { renderCustomer: orderContext.renderCustomerType }\r\n                                }\r\n                              }\r\n                            ]}\r\n                            reordering={true}\r\n                            footer={\r\n                              <PageComponent\r\n                                currentPage={this.props.page}\r\n                                onPageChanged={this.onPageChg.bind(this)}\r\n                                pageLimit={this.props.pageSize}\r\n                                totalRecords={this.props.total}\r\n                              />\r\n                            }\r\n                          />\r\n                        )}\r\n                        <Row>\r\n                          <Col xs={12}>\r\n                            <div style={{ display: 'flex', justifyContent: 'center', margin: '10px 0px' }}>\r\n                              <Button\r\n                                icon=\"disable\"\r\n                                text={this.getCancelAndCloseTextFormated()}\r\n                                onClick={value.onCancelOrder}\r\n                              />\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </VCardPanel>\r\n                    )\r\n                  }\r\n                </OrderConsumer>\r\n              )\r\n            }\r\n          </AppThemeContext.Consumer>\r\n        )}\r\n      </FCreateOrderContext.Consumer>\r\n    );\r\n  }\r\n\r\n  private getCancelAndCloseTextFormated() {\r\n    return `${this.props.intl.formatMessage({ id: 'app.cancel' })} /${this.props.intl.formatMessage({\r\n      id: 'app.close'\r\n    })} `;\r\n  }\r\n\r\n  private getNameHeader(result: number) {\r\n    return `${this.props.intl.formatMessage({ id: 'delivery.order.open.order_history' })} (${result})`;\r\n  }\r\n}\r\n\r\nexport default injectIntl(OrderHistory);\r\n","import React, { Component } from 'react';\r\nimport { Col, Row } from 'react-flexbox-grid';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport SearchCriteriaAccountForm from './components/search_criteria_account_form/SearchCriteriaAccountForm';\r\nimport { FieldState, FormState } from 'formstate';\r\nimport SearchResults from '../search_results/SearchResults';\r\nimport OrderHistory from '../order_history/OrderHistory';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { OrderAccountStore } from '../../../stores/OrderAccountStore';\r\nimport { OrderHistoryStore } from '../../../stores/OrderHistoryStore';\r\nimport { OrderManagementStore } from '../../../stores/OrderManagementStore';\r\nimport { VCardPanel } from 'gsi-vx-ui';\r\nimport OrderDetailsComponent from '../order_details/OrderDetailsComponent';\r\nimport { Dialog } from '@blueprintjs/core';\r\nimport { AppThemeContext } from '../../../../../../../App';\r\nimport { OrdersStore } from '../../../stores/OrdersStore';\r\nimport CustomComponent from '../../../commons/CustomComponent';\r\nimport { ITheme } from '../../../../../../../core/stores/AppStore';\r\n\r\ninterface ISearchAccount extends InjectedIntlProps {\r\n  onSaveOrder(): void;\r\n  onClose(): void;\r\n  order_management_store?: OrderManagementStore;\r\n  accounts_orders_store?: OrderAccountStore;\r\n  history_orders_store?: OrderHistoryStore;\r\n  orders_store?: OrdersStore;\r\n}\r\nexport const FFilterAccContext = React.createContext({\r\n  onSearchAcc: () => {},\r\n  onClearSearchAcc: () => {},\r\n  loadingAccount: false\r\n});\r\nexport const FCreateOrderContext = React.createContext({\r\n  onCancelOrder: () => {}\r\n});\r\n@inject('order_management_store', 'accounts_orders_store', 'history_orders_store', 'orders_store')\r\n@observer\r\nclass SearchAccount extends Component<ISearchAccount> {\r\n  form: FormState<any>;\r\n\r\n  constructor(props: ISearchAccount) {\r\n    super(props);\r\n    this.form = new FormState<any>({\r\n      accountId: new FieldState(''),\r\n      name: new FieldState(''),\r\n      productId: new FieldState(''),\r\n      city: new FieldState(''),\r\n      stateProv: new FieldState('')\r\n    });\r\n    this.props.accounts_orders_store!.getElements();\r\n  }\r\n  onSearchAccount = () => {\r\n    const { accounts_orders_store } = this.props;\r\n    this.form.$.accountId.value &&\r\n      accounts_orders_store!.addFilter({ field: 'accountId', value: this.form.$.accountId.value, operator: 'LIKE' });\r\n    this.form.$.productId.value &&\r\n      accounts_orders_store!.addFilter({\r\n        field: 'productId',\r\n        value: this.form.$.productId.value,\r\n        operator: 'EQUALITY'\r\n      });\r\n    this.form.$.city.value &&\r\n      accounts_orders_store!.addFilter({ field: 'city', value: this.form.$.city.value, operator: 'LIKE' });\r\n    this.form.$.stateProv.value &&\r\n      accounts_orders_store!.addFilter({ field: 'stateId', value: this.form.$.stateProv.value, operator: 'EQUALITY' });\r\n    this.form.$.name.value &&\r\n      accounts_orders_store!.addFilter({ field: 'name', value: this.form.$.name.value, operator: 'LIKE' });\r\n    this.props.accounts_orders_store!.getElements();\r\n  };\r\n  onEraserSearch = () => {\r\n    const { accounts_orders_store } = this.props;\r\n    accounts_orders_store!.removeFilter({ field: 'accountId', value: this.form.$.accountId.value, operator: 'LIKE' });\r\n    accounts_orders_store!.removeFilter({\r\n      field: 'productId',\r\n      value: this.form.$.productId.value,\r\n      operator: 'EQUALITY'\r\n    });\r\n    accounts_orders_store!.removeFilter({ field: 'city', value: this.form.$.city.value, operator: 'LIKE' });\r\n    accounts_orders_store!.removeFilter({ field: 'stateId', value: this.form.$.stateProv.value, operator: 'EQUALITY' });\r\n    this.form.reset();\r\n    this.props.accounts_orders_store!.getElements();\r\n  };\r\n  onSelectAcct = (data: any) => {\r\n    const { accounts_orders_store, history_orders_store } = this.props;\r\n    accounts_orders_store!.setElement(data);\r\n    history_orders_store!.addFilter({ field: 'acctId', value: data.acctId, operator: 'EQUALITY' });\r\n    history_orders_store!.getElements();\r\n  };\r\n  handleSaveDetails = () => {\r\n    const { accounts_orders_store } = this.props;\r\n    accounts_orders_store!.setOpenDetails(false);\r\n    this.props.onSaveOrder();\r\n  };\r\n  onCreateOrder = () => {\r\n    this.props.accounts_orders_store!.setOpenDetails(true);\r\n  };\r\n  onReorderAcc = (columns: string[]) => {\r\n    this.props.accounts_orders_store!.setColumnsAcc(columns);\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.accounts_orders_store!.resetElement();\r\n    this.props.history_orders_store!.removeFilter({ field: 'acctId', value: '', operator: 'EQUALITY' });\r\n  }\r\n  onCloseDetails() {\r\n    this.props.accounts_orders_store!.setOpenDetails(false);\r\n  }\r\n  onPageChange(data: any, store: string) {\r\n    const obj_store = store === 'accounts' ? this.props.accounts_orders_store! : this.props.history_orders_store!;\r\n    if (data.paginationData.currentPage !== obj_store.page || data.pageLimit !== obj_store.size) {\r\n      obj_store.setSize(data.pageLimit);\r\n      data.paginationData.currentPage > 0 && obj_store.setPage(data.paginationData.currentPage);\r\n    }\r\n  }\r\n  getOrderDetailsComponent = () => {\r\n    const { accounts_orders_store } = this.props;\r\n    return (\r\n      <Dialog\r\n        isOpen={true}\r\n        canOutsideClickClose={false}\r\n        onClose={() => accounts_orders_store!.setOpenDetails(false)}\r\n        style={{ width: '85%', paddingBottom: '0' }}\r\n        canEscapeKeyClose={false}\r\n      >\r\n        <AppThemeContext.Consumer>\r\n          {(themeContext: ITheme) =>\r\n            themeContext && (\r\n              <VCardPanel\r\n                headerText={this.props.intl.formatMessage({ id: 'delivery.order.open.titleDetails' })}\r\n                bodyPadding={'1px'}\r\n                headerBackgroundColor={themeContext.headers}\r\n                headerColor={'#FFFFFF'}\r\n                headerTextJustify={'center'}\r\n                headerCustomComponent={<CustomComponent action={this.onCloseDetails.bind(this)} />}\r\n              >\r\n                <OrderDetailsComponent\r\n                  orderDetails={accounts_orders_store!.element}\r\n                  onSave={this.handleSaveDetails}\r\n                  onCancel={() => accounts_orders_store!.setOpenDetails(false)}\r\n                  nofees={0}\r\n                />\r\n              </VCardPanel>\r\n            )\r\n          }\r\n        </AppThemeContext.Consumer>\r\n      </Dialog>\r\n    );\r\n  };\r\n  render() {\r\n    const { order_management_store, accounts_orders_store } = this.props;\r\n    const { listStates, listProducts } = order_management_store!;\r\n    const { elements, isLoading, count, element, openDetails, size, page } = accounts_orders_store!;\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col xs={12} lg={3}>\r\n            <FFilterAccContext.Provider\r\n              value={{\r\n                onSearchAcc: this.onSearchAccount,\r\n                onClearSearchAcc: this.onEraserSearch,\r\n                loadingAccount: isLoading\r\n              }}\r\n            >\r\n              <SearchCriteriaAccountForm form={this.form} products={listProducts} states={listStates} />\r\n            </FFilterAccContext.Provider>\r\n          </Col>\r\n          <Col xs={12} lg={9}>\r\n            <SearchResults\r\n              pageSize={size}\r\n              page={page}\r\n              onPageChange={this.onPageChange.bind(this)}\r\n              data={elements}\r\n              columns={accounts_orders_store!.columnsAcc}\r\n              onSelectAcct={this.onSelectAcct}\r\n              onOrderColumns={this.onReorderAcc}\r\n              onCreateOrder={this.onCreateOrder}\r\n              disableBtn={!(element && element.acctId)}\r\n              isLoading={isLoading}\r\n              numberAccount={count}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col xs={12}>\r\n            <FCreateOrderContext.Provider value={{ onCancelOrder: this.props.onClose }}>\r\n              <OrderHistory\r\n                onPageChange={this.onPageChange.bind(this)}\r\n                total={this.props.history_orders_store!.count}\r\n                page={this.props.history_orders_store!.page}\r\n                pageSize={this.props.history_orders_store!.size}\r\n                isLoading={this.props.history_orders_store!.isLoading}\r\n                data={this.props.history_orders_store!.elements}\r\n              />\r\n            </FCreateOrderContext.Provider>\r\n          </Col>\r\n          {openDetails && this.getOrderDetailsComponent()}\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(SearchAccount);\r\n","import React, { Component } from 'react';\r\nimport { AppThemeContext } from '../../../../../../../App';\r\nimport { Button, Classes, Dialog } from '@blueprintjs/core';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { OrderManagementStore } from '../../../stores/OrderManagementStore';\r\nimport { VCardPanel } from 'gsi-vx-ui';\r\nimport CustomComponent from '../../../commons/CustomComponent';\r\nimport { IOrderContext, OrderContext } from '../../../containers/OrderManagementContainer';\r\nimport SearchAccount from '../search_account/SearchAccount';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { styleButton } from '../style';\r\nimport { ITheme } from '../../../../../../../core/stores/AppStore';\r\n\r\nconst OrderConsumer = OrderContext.Consumer;\r\n\r\ninterface IDialogAccount extends InjectedIntlProps {\r\n  order_management_store?: OrderManagementStore;\r\n}\r\ninterface IDialogAccountState {\r\n  open: boolean;\r\n}\r\n@inject('order_management_store')\r\n@observer\r\nclass DialogCreateAccount extends Component<IDialogAccount, IDialogAccountState> {\r\n  constructor(props: IDialogAccount) {\r\n    super(props);\r\n  }\r\n  public state: IDialogAccountState = {\r\n    open: false\r\n  };\r\n  changeOpen = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Button icon={'plus'} onClick={this.changeOpen} style={styleButton}>\r\n          {this.props.intl.formatMessage({ id: 'delivery.order.open.btn_create' })}\r\n        </Button>\r\n        <Dialog\r\n          isOpen={this.state.open}\r\n          onClose={this.changeOpen}\r\n          style={{ width: '85%' }}\r\n          canOutsideClickClose={false}\r\n          canEscapeKeyClose={false}\r\n        >\r\n          <AppThemeContext.Consumer>\r\n            {(themeContext: ITheme) =>\r\n              themeContext && (\r\n                <VCardPanel\r\n                  headerText={this.props.intl.formatMessage({ id: 'delivery.order.open.searchCriteria' })}\r\n                  bodyPadding={'1px'}\r\n                  headerBackgroundColor={themeContext.headers}\r\n                  headerColor={'#FFFFFF'}\r\n                  headerTextJustify={'center'}\r\n                  headerCustomComponent={<CustomComponent action={this.changeOpen} />}\r\n                >\r\n                  <div className={Classes.DIALOG_BODY}>\r\n                    <OrderConsumer>\r\n                      {(orderContext: IOrderContext) =>\r\n                        orderContext && (\r\n                          <SearchAccount\r\n                            onSaveOrder={() => {\r\n                              orderContext.handleOnSaveOrders();\r\n                            }}\r\n                            onClose={this.changeOpen}\r\n                          />\r\n                        )\r\n                      }\r\n                    </OrderConsumer>\r\n                  </div>\r\n                </VCardPanel>\r\n              )\r\n            }\r\n          </AppThemeContext.Consumer>\r\n        </Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(DialogCreateAccount);\r\n","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Button, Classes } from '@blueprintjs/core';\r\nimport { Col, Row } from 'react-flexbox-grid';\r\nimport { VInputField, VSelectField } from 'gsi-vx-ui';\r\nimport { FieldState, FormState } from 'formstate';\r\nimport ListDeliveryTypeComponent from './delivery_type/ListDeliveryTypeComponent';\r\nimport ListOrdersComponent from './list_orders/ListOrdersComponent';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { OrderManagementStore } from '../../stores/OrderManagementStore';\r\nimport { BtnAddProfile } from '../order_management/style';\r\nimport { debounce } from 'lodash';\r\nimport { OrdersStore } from '../../stores/OrdersStore';\r\nimport BottomActionsComponent from './bottom_actions/BottomActionsComponent';\r\nimport { styleButton } from './style';\r\nimport DialogFilterComponent from './dialog_filter/DialogFilterComponent';\r\nimport DialogCreateAccount from './dialog_create_account/DialogCreateAccount';\r\nimport { IOrderContext, OrderContext } from '../../containers/OrderManagementContainer';\r\n\r\nconst OrderConsumer = OrderContext.Consumer;\r\n\r\ninterface IOrdersComponent extends InjectedIntlProps {\r\n  order_management_store?: OrderManagementStore;\r\n  orders_store?: OrdersStore;\r\n}\r\n\r\n@inject('order_management_store', 'orders_store')\r\n@observer\r\nclass OrdersComponent extends Component<IOrdersComponent> {\r\n  form!: FormState<any>;\r\n  constructor(props: IOrdersComponent) {\r\n    super(props);\r\n    this.initForm();\r\n  }\r\n  initForm = () => {\r\n    const { search, profileActive } = this.props.order_management_store!;\r\n    this.form = new FormState<any>({\r\n      select_profile: new FieldState(profileActive),\r\n      chkAllOrder: new FieldState(''),\r\n      chkUngeocodedOnly: new FieldState(''),\r\n      fSearch: new FieldState(search),\r\n      startOrderDate: new FieldState(''),\r\n      endOrderDate: new FieldState(''),\r\n      days: new FieldState('')\r\n    });\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.order_management_store!.setOrderDetails({});\r\n  }\r\n\r\n  changeFilter = (data: boolean) => {\r\n    this.props.orders_store!.changeFilterByUrgency(data);\r\n  };\r\n  raiseDoSearchWhenUserStoppedTyping = debounce((setSearchList: any) => {\r\n    setSearchList(this.form.$.fSearch.value);\r\n  }, 1800);\r\n  render() {\r\n    const { order_management_store, orders_store, intl } = this.props;\r\n    const { isLoading, listProfiles } = order_management_store!;\r\n    const { activeList, filterByUrgency, searchDays } = orders_store!;\r\n    return (\r\n      <OrderConsumer>\r\n        {(orderContext: IOrderContext) =>\r\n          orderContext && (\r\n            <React.Fragment>\r\n              <div style={{ padding: 5 }}>\r\n                <Row>\r\n                  <Col lg={9} style={{ marginBottom: 5 }}>\r\n                    <ListDeliveryTypeComponent\r\n                      onChangeFilter={this.changeFilter}\r\n                      selType={orderContext.isOrdersLoading ? 'DISABLED' : 'CELL'}\r\n                    />\r\n                  </Col>\r\n                  <Col lg={3} style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end' }}>\r\n                    <div style={{ width: 210 }}>\r\n                      <VInputField\r\n                        onChange={(data: any) => {\r\n                          this.form.$.fSearch.onChange(data);\r\n                          this.raiseDoSearchWhenUserStoppedTyping(orderContext.setSearchList);\r\n                        }}\r\n                        fill\r\n                        id={'idsearchorder'}\r\n                        fieldState={this.form.$.fSearch}\r\n                        placeholder={intl.formatMessage({ id: 'delivery.order.review.ticketSearch' })}\r\n                        type={'search'}\r\n                        leftIcon={'search'}\r\n                      />\r\n                    </div>\r\n                    <div style={{ width: 250, display: 'flex', justifyContent: 'flex-end' }}>\r\n                      <div style={{ width: 175, height: 35 }}>\r\n                        <VSelectField\r\n                          id={'idselectprofile'}\r\n                          className={isLoading ? Classes.SKELETON : ''}\r\n                          fieldState={this.form.$.select_profile}\r\n                          defaultText={intl.formatMessage({ id: 'delivery.order.open.select_profile' })}\r\n                          layer={{ inputOrientation: 'end' }}\r\n                          disabled={orderContext.isOrdersLoading}\r\n                          onChange={orderContext.selectProfile}\r\n                          fill\r\n                          options={listProfiles}\r\n                        />\r\n                      </div>\r\n                      <BtnAddProfile\r\n                        icon=\"filter-remove\"\r\n                        disabled={orderContext.isOrdersLoading}\r\n                        onClick={() => {\r\n                          this.form.$.select_profile.onChange('');\r\n                          orderContext.clearProfile();\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <DialogFilterComponent />\r\n                    <Button icon={'search'} style={styleButton} disabled>\r\n                      {intl.formatMessage({ id: 'delivery.order.open.btn_analyze' })}\r\n                    </Button>\r\n                    <DialogCreateAccount />\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n              <div style={{ padding: 5 }}>\r\n                <ListOrdersComponent\r\n                  total={orderContext.totalOrders}\r\n                  activeList={activeList}\r\n                  filterByUrgency={filterByUrgency}\r\n                  searchDays={searchDays}\r\n                />\r\n              </div>\r\n              <Row style={{ marginTop: 7 }}>\r\n                <BottomActionsComponent isLoading={orderContext.isOrdersLoading} searchDays={orderContext.searchDays} />\r\n              </Row>\r\n            </React.Fragment>\r\n          )\r\n        }\r\n      </OrderConsumer>\r\n    );\r\n  }\r\n}\r\nexport default injectIntl(OrdersComponent);\r\n"],"sourceRoot":""}