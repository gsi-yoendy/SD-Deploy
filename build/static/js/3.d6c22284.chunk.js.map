{"version":3,"sources":["modules/delivery/modules/order_management/components/delivery_exceptions/list_exceptions/ListDeliveryExceptions.tsx","modules/delivery/modules/order_management/components/delivery_exceptions/filter_exceptions/FilterExceptions.tsx","modules/delivery/modules/order_management/components/delivery_exceptions/exceptions_actions/ExceptionsActions.tsx","modules/delivery/modules/order_management/components/delivery_exceptions/DeliveryExceptionsComponent.tsx"],"names":["ThemeConsumer","AppThemeContext","Consumer","renderCustomer","value","react_default","a","createElement","icon","iconSize","color","renderCustomerType","colorType","injectIntl","props","themeConsumer","DeliveryContext","deliveryConsumer","lib","headerText","concat","intl","formatMessage","id","total","bodyPadding","headerTextJustify","headerBackgroundColor","headers","headerColor","sidebar_text","isLoading","cellSelectionType","striped","columns","enableColumnResizing","typeHeightRow","widgetsCell","column","widget","type","cusmtomerCell","columns_name","flag","accountId","orderId","orderStatus","upperCase","orderDate","name","productName","qty","lastDate","lastDelQty","lastDelDriver","columnWidths","data","listExceptions","footer","PagePaginatorComponent","currentPage","page","onPageChanged","onPageChange","pageLimit","pageSize","totalRecords","totalOrder","ColumnArea","Styled","Col","_templateObject","FilterExceptions","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","form","changeDays","start","$","dateMayorIgual","moment","end","dateMenorIgual","onChangeDate","diff_days","diff","days","day","onChange","FormState","FieldState","startDate","toDate","endDate","search","_this2","App","Fragment","react_flexbox_grid_lib","style","lg","sm","label","dateType","fieldState","disabled","layer","inputWidth","labelWidth","width","marginTop","placeholder","fill","onSearchChange","leftIcon","VEditableList","hideBtn","height","headerBgColor","elementsSelected","listStatus","listSelectElements","onSelect","onItemClick","onStatusChange","Component","OrderContext","marginBottom","SButton","styled","Button","ExceptionsActions_templateObject","display","objectSpread","marginLeft","buttons","flexDirection","onClick","onExport","DeliveryExceptionsComponent_templateObject","React","createContext","DeliveryExceptionsComponent","inject","observer","delivery_exceptions_store","searchChange","onDates","setDates","status","map","d","statusChange","onExportar","exportExcel","paginationData","size","setSize","setPage","_ref","elements","count","moqEndDate","moqStartDate","Provider","xs","margin","filter_exceptions_FilterExceptions","list_exceptions_ListDeliveryExceptions","bind","exceptions_actions_ExceptionsActions"],"mappings":"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","file":"static/js/3.d6c22284.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\r\nimport { VCardPanel, VSpinner, VTable } from 'gsi-vx-ui';\r\nimport { DeliveryContext, IDeliveryContext } from '../DeliveryExceptionsComponent';\r\nimport { Icon } from '@blueprintjs/core';\r\nimport { AppThemeContext } from '../../../../../../../App';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport PageComponent from '../../../../../../commons/components/Paginator/PagePaginatorComponent';\r\nimport { upperCase } from 'lodash';\r\nimport { ITheme } from '../../../../../../../core/stores/AppStore';\r\n\r\nconst ThemeConsumer = AppThemeContext.Consumer;\r\ninterface IListExceptions extends InjectedIntlProps {\r\n  listExceptions: any[];\r\n  totalOrder: number;\r\n  page: number;\r\n  pageSize: number;\r\n  onPageChange: (data: any) => void;\r\n}\r\n\r\nconst renderCustomer = (value: string): ReactNode => {\r\n  return <div>{value && <Icon icon=\"flag\" iconSize={17} color=\"#DB3737\" />}</div>;\r\n};\r\nconst renderCustomerType = (value: string): ReactNode => {\r\n  const colorType = value === '1' ? '#10161A' : '#DB3737';\r\n  return (\r\n    <div>\r\n      <Icon icon=\"phone\" iconSize={17} color={colorType} />\r\n    </div>\r\n  );\r\n};\r\nconst ListDeliveryExceptions: React.FunctionComponent<IListExceptions> = (props: IListExceptions): JSX.Element => {\r\n  return (\r\n    <ThemeConsumer>\r\n      {(themeConsumer: ITheme) =>\r\n        themeConsumer && (\r\n          <DeliveryContext.Consumer>\r\n            {(deliveryConsumer: IDeliveryContext) =>\r\n              deliveryConsumer && (\r\n                <VCardPanel\r\n                  headerText={`${props.intl.formatMessage({ id: 'delivery.order.review.textDelExcep' })} (${\r\n                    deliveryConsumer.total\r\n                  })`}\r\n                  bodyPadding={'1px'}\r\n                  headerTextJustify={'center'}\r\n                  headerBackgroundColor={themeConsumer.headers}\r\n                  headerColor={themeConsumer.sidebar_text}\r\n                >\r\n                  {deliveryConsumer.isLoading ? (\r\n                    <VSpinner />\r\n                  ) : (\r\n                    <VTable\r\n                      cellSelectionType={'ENTIRE_ROW'}\r\n                      striped\r\n                      columns={[\r\n                        'flag',\r\n                        'accountId',\r\n                        'name',\r\n                        'orderId',\r\n                        'orderStatus',\r\n                        'type',\r\n                        'productName',\r\n                        'orderDate',\r\n                        'qty',\r\n                        'lastDate',\r\n                        'lastDelQty',\r\n                        'lastDelDriver'\r\n                      ]}\r\n                      enableColumnResizing={true}\r\n                      typeHeightRow={'HALF'}\r\n                      widgetsCell={[\r\n                        {\r\n                          column: 'flag',\r\n                          widget: { type: 'CUSTOMERCOMPONENT', cusmtomerCell: { renderCustomer } }\r\n                        },\r\n                        {\r\n                          column: 'type',\r\n                          widget: {\r\n                            type: 'CUSTOMERCOMPONENT',\r\n                            cusmtomerCell: { renderCustomer: renderCustomerType }\r\n                          }\r\n                        }\r\n                      ]}\r\n                      columns_name={{\r\n                        flag: props.intl.formatMessage({ id: 'delivery.order.review.cmDelSt' }),\r\n                        accountId: props.intl.formatMessage({ id: 'delivery.order.review.cmAccId' }),\r\n                        orderId: props.intl.formatMessage({ id: 'delivery.order.review.cmTickNo' }),\r\n                        orderStatus: upperCase(props.intl.formatMessage({ id: 'delivery.order.open.order_status' })),\r\n                        orderDate: upperCase(props.intl.formatMessage({ id: 'delivery.order.open.order_date' })),\r\n                        name: upperCase(props.intl.formatMessage({ id: 'delivery.order.open.name' })),\r\n                        productName: upperCase(props.intl.formatMessage({ id: 'delivery.order.open.product' })),\r\n                        qty: upperCase(props.intl.formatMessage({ id: 'delivery.order.open.order_qty' })),\r\n                        lastDate: props.intl.formatMessage({ id: 'delivery.order.review.cmLastDate' }),\r\n                        lastDelQty: props.intl.formatMessage({ id: 'delivery.order.review.cmLastQty' }),\r\n                        type: upperCase(props.intl.formatMessage({ id: 'delivery.order.open.order_type' })),\r\n                        lastDelDriver: upperCase(props.intl.formatMessage({ id: 'delivery.order.review.cmLastDriver' }))\r\n                      }}\r\n                      columnWidths={[100, 100, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120]}\r\n                      data={props.listExceptions}\r\n                      footer={\r\n                        <PageComponent\r\n                          currentPage={props.page}\r\n                          onPageChanged={props.onPageChange}\r\n                          pageLimit={props.pageSize}\r\n                          totalRecords={props.totalOrder}\r\n                        />\r\n                      }\r\n                    />\r\n                  )}\r\n                </VCardPanel>\r\n              )\r\n            }\r\n          </DeliveryContext.Consumer>\r\n        )\r\n      }\r\n    </ThemeConsumer>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ListDeliveryExceptions);\r\n","import React, { Component } from 'react';\r\nimport { VDateTimePicker, VInputField } from 'gsi-vx-ui';\r\nimport { Col, Row } from 'react-flexbox-grid';\r\nimport { FieldsCol, NumberField, SearchCol } from '../../order_management/style';\r\nimport { VEditableList } from '../../../../../../commons/components/editable_list/VEditableList';\r\nimport Styled from 'styled-components';\r\nimport { FieldState, FormState } from 'formstate';\r\nimport moment from 'moment';\r\nimport { AppThemeContext } from '../../../../../../../App';\r\nimport { DeliveryContext, IDeliveryContext } from '../DeliveryExceptionsComponent';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { ITheme } from '../../../../../../../core/stores/AppStore';\r\n\r\nconst ColumnArea = Styled(Col)`\r\npadding:10px;\r\ndisplay:flex;\r\nflex-direction:row;\r\n`;\r\ninterface IFilterExceptions extends InjectedIntlProps {\r\n  onSearchChange(data: any): void;\r\n  onStatusChange(data: any[]): void;\r\n  onChangeDate(start: any, end: any): void;\r\n  endDate: any;\r\n  startDate: any;\r\n}\r\n\r\nclass FilterExceptions extends Component<IFilterExceptions> {\r\n  form: FormState<any>;\r\n  constructor(props: IFilterExceptions) {\r\n    super(props);\r\n    this.form = new FormState<any>({\r\n      dateMayorIgual: new FieldState(this.props.startDate ? this.props.startDate.toDate() : null),\r\n      dateMenorIgual: new FieldState(this.props.endDate ? this.props.endDate.toDate() : null),\r\n      day: new FieldState(''),\r\n      search: new FieldState('')\r\n    });\r\n  }\r\n\r\n  changeDays = () => {\r\n    const start = this.form.$.dateMayorIgual.value && moment(this.form.$.dateMayorIgual.value);\r\n    const end = this.form.$.dateMenorIgual.value && moment(this.form.$.dateMenorIgual.value);\r\n    this.props.onChangeDate(start, end);\r\n    if (start && end) {\r\n      const diff_days = end.diff(start, 'days');\r\n      const days = diff_days && diff_days > 0 ? diff_days : '';\r\n      this.form.$.day.onChange(days);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <AppThemeContext.Consumer>\r\n        {(themeConsumer: ITheme) =>\r\n          themeConsumer && (\r\n            <DeliveryContext.Consumer>\r\n              {(deliveryConsumer: IDeliveryContext) => (\r\n                <>\r\n                  <Row>\r\n                    <FieldsCol lg={8} sm={12}>\r\n                      <VDateTimePicker\r\n                        onChange={this.changeDays}\r\n                        label={this.props.intl.formatMessage({ id: 'delivery.order.review.startDate' })}\r\n                        dateType={'DATE'}\r\n                        fieldState={this.form.$.dateMayorIgual}\r\n                        id={'idstartDateExceptions'}\r\n                      />\r\n                      <VDateTimePicker\r\n                        value={''}\r\n                        label={this.props.intl.formatMessage({ id: 'delivery.order.review.endDate' })}\r\n                        dateType={'DATE'}\r\n                        fieldState={this.form.$.dateMenorIgual}\r\n                        onChange={this.changeDays}\r\n                        id={'idendDateExceptions'}\r\n                      />\r\n                      <NumberField\r\n                        type={'text'}\r\n                        disabled\r\n                        id={'iddays'}\r\n                        label={this.props.intl.formatMessage({ id: 'delivery.order.review.days' })}\r\n                        fieldState={this.form.$.day}\r\n                        layer={{ inputWidth: 8, labelWidth: 7 }}\r\n                      />\r\n                    </FieldsCol>\r\n                    <SearchCol lg={4} sm={12}>\r\n                      <div style={{ width: 213, marginTop: 30 }}>\r\n                        <VInputField\r\n                          fieldState={this.form.$.search}\r\n                          placeholder={this.props.intl.formatMessage({ id: 'delivery.order.review.ticketSearch' })}\r\n                          fill\r\n                          onChange={this.props.onSearchChange}\r\n                          id={'idsearchexceptions'}\r\n                          type={'search'}\r\n                          leftIcon={'search'}\r\n                        />\r\n                      </div>\r\n                    </SearchCol>\r\n                  </Row>\r\n                  <Row>\r\n                    <ColumnArea>\r\n                      <div style={{ width: 300 }}>\r\n                        <VEditableList\r\n                          hideBtn\r\n                          height={'200px'}\r\n                          headerBgColor={themeConsumer.headers}\r\n                          headerColor={themeConsumer.sidebar_text}\r\n                          elementsSelected={deliveryConsumer.listStatus}\r\n                          listSelectElements={deliveryConsumer.listStatus}\r\n                          headerText={this.props.intl.formatMessage({ id: 'delivery.order.open.order_status' })}\r\n                          id={'idVEditableExcep'}\r\n                          onSelect={() => {}}\r\n                          onItemClick={(data: any) => {\r\n                            this.props.onStatusChange(data);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </ColumnArea>\r\n                  </Row>\r\n                </>\r\n              )}\r\n            </DeliveryContext.Consumer>\r\n          )\r\n        }\r\n      </AppThemeContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(FilterExceptions);\r\n","import React from 'react';\r\nimport { Col, Row } from 'react-flexbox-grid';\r\nimport { Button } from '@blueprintjs/core';\r\nimport styled from 'styled-components';\r\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\r\nimport { OrderContext } from '../../../containers/OrderManagementContainer';\r\n\r\nconst OrderConsumer = OrderContext.Consumer;\r\n\r\nconst style = { marginBottom: 5, width: 200 };\r\nconst SButton = styled(Button)`\r\n  & span.bp3-icon {\r\n    color: #db3737 !important;\r\n  }\r\n`;\r\ninterface IActions extends InjectedIntlProps {\r\n  onExport(): void;\r\n}\r\nconst ExceptionsActions: React.FunctionComponent<IActions> = (props: IActions): JSX.Element => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col sm={12} lg={6} style={{ display: 'flex' }}>\r\n          <SButton icon={'flag'} style={{ ...style, marginLeft: 1 }}>\r\n            {props.intl.formatMessage({ id: 'delivery.order.review.btnCreateOpen' })}\r\n          </SButton>\r\n          <Button icon={'tick'} style={{ ...style, marginLeft: 5 }}>\r\n            {props.intl.formatMessage({ id: 'delivery.order.review.btnMarkCancel' })}\r\n          </Button>\r\n        </Col>\r\n        <Col sm={12} lg={6} style={{ display: 'flex', flexDirection: 'row-reverse' }}>\r\n          <Button icon={'export'} style={{ ...style, marginLeft: 1 }} onClick={props.onExport}>\r\n            {props.intl.formatMessage({ id: 'delivery.order.review.btn_export_excel' })}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ExceptionsActions);\r\n","import React, { Component } from 'react';\r\nimport ListDeliveryExceptions from './list_exceptions/ListDeliveryExceptions';\r\nimport FilterExceptions from './filter_exceptions/FilterExceptions';\r\nimport ExceptionsActions from './exceptions_actions/ExceptionsActions';\r\nimport { Col, Row } from 'react-flexbox-grid';\r\nimport styled from 'styled-components';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DeliveryExceptionStore } from '../../stores/DeliveryExceptionStore';\r\n\r\nconst SCol = styled(Col)`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\nexport interface IDeliveryContext {\r\n  listStatus: any[];\r\n  total?: number;\r\n  isLoading?: boolean;\r\n}\r\nexport const DeliveryContext = React.createContext<IDeliveryContext>({\r\n  listStatus: [],\r\n  total: 0,\r\n  isLoading: false\r\n});\r\ninterface IDeliveryExceptions {\r\n  delivery_exceptions_store?: DeliveryExceptionStore;\r\n}\r\n@inject('delivery_exceptions_store')\r\n@observer\r\nclass DeliveryExceptionsComponent extends Component<IDeliveryExceptions> {\r\n  constructor(props: IDeliveryExceptions) {\r\n    super(props);\r\n  }\r\n  onSearchChange = (data: any) => {\r\n    this.props.delivery_exceptions_store!.searchChange(data);\r\n  };\r\n  onDates = (start: any, end: any) => {\r\n    this.props.delivery_exceptions_store!.setDates(start, end);\r\n  };\r\n  onStatusChange = (data: any[]) => {\r\n    const status = data.map((d: any) => d.value);\r\n    this.props.delivery_exceptions_store!.statusChange(status);\r\n  };\r\n  onExportar = () => {\r\n    this.props.delivery_exceptions_store!.exportExcel();\r\n  };\r\n  onPageChange(data: any) {\r\n    if (\r\n      data.paginationData.currentPage !== this.props.delivery_exceptions_store!.page ||\r\n      data.pageLimit !== this.props.delivery_exceptions_store!.size\r\n    ) {\r\n      this.props.delivery_exceptions_store!.setSize(data.pageLimit);\r\n      data.paginationData.currentPage > 0 &&\r\n        this.props.delivery_exceptions_store!.setPage(data.paginationData.currentPage);\r\n    }\r\n  }\r\n  render() {\r\n    const {\r\n      elements,\r\n      count,\r\n      isLoading,\r\n      listStatus,\r\n      moqEndDate,\r\n      moqStartDate,\r\n      size,\r\n      page\r\n    } = this.props.delivery_exceptions_store!;\r\n    return (\r\n      <DeliveryContext.Provider value={{ listStatus, isLoading, total: count }}>\r\n        <Row>\r\n          <Col xs={12} sm={6}>\r\n            <div style={{ margin: 5 }}>\r\n              <FilterExceptions\r\n                onSearchChange={this.onSearchChange}\r\n                endDate={moqEndDate}\r\n                startDate={moqStartDate}\r\n                onChangeDate={this.onDates}\r\n                onStatusChange={this.onStatusChange}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <div style={{ margin: 5 }}>\r\n          <ListDeliveryExceptions\r\n            listExceptions={elements}\r\n            pageSize={size}\r\n            totalOrder={count}\r\n            page={page}\r\n            onPageChange={this.onPageChange.bind(this)}\r\n          />\r\n        </div>\r\n        <div style={{ margin: 5 }}>\r\n          <ExceptionsActions onExport={this.onExportar} />\r\n        </div>\r\n      </DeliveryContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeliveryExceptionsComponent;\r\n"],"sourceRoot":""}